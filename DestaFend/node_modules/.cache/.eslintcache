[{"/home/ghait/Desktop/Desta25/DestaFend/src/index.js":"1","/home/ghait/Desktop/Desta25/DestaFend/src/reportWebVitals.js":"2","/home/ghait/Desktop/Desta25/DestaFend/src/components/SearchBar.js":"3","/home/ghait/Desktop/Desta25/DestaFend/src/MainApp.js":"4","/home/ghait/Desktop/Desta25/DestaFend/src/components/App.js":"5","/home/ghait/Desktop/Desta25/DestaFend/src/components/Tile.js":"6","/home/ghait/Desktop/Desta25/DestaFend/src/components/LandingPage.js":"7","/home/ghait/Desktop/Desta25/DestaFend/src/components/NavBar.js":"8","/home/ghait/Desktop/Desta25/DestaFend/src/components/BusinessPage.js":"9"},{"size":512,"mtime":1631994462517,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1631994462517,"results":"12","hashOfConfig":"11"},{"size":1298,"mtime":1631994462513,"results":"13","hashOfConfig":"11"},{"size":689,"mtime":1632016076192,"results":"14","hashOfConfig":"11"},{"size":11225,"mtime":1632011973154,"results":"15","hashOfConfig":"11"},{"size":1222,"mtime":1632018434623,"results":"16","hashOfConfig":"11"},{"size":855,"mtime":1632015722717,"results":"17","hashOfConfig":"11"},{"size":295,"mtime":1631996001197,"results":"18","hashOfConfig":"11"},{"size":1313,"mtime":1632018291704,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1axee0i",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/ghait/Desktop/Desta25/DestaFend/src/index.js",[],["41","42"],"/home/ghait/Desktop/Desta25/DestaFend/src/reportWebVitals.js",[],"/home/ghait/Desktop/Desta25/DestaFend/src/components/SearchBar.js",["43","44","45"],"import React, { useState } from \"react\";\nimport \"./SearchBar.css\";\n\nfunction SearchBar({ placeholder, data }) {\n  const [filteredData, setFilteredData] = useState([]);\n  const [wordEntered, setWordEntered] = useState(\"\");\n\n  const handleFilter = (event) => {\n    const searchWord = event.target.value;\n    setWordEntered(searchWord);\n    const newFilter = data.filter((value) => {\n            return value.title.toLowerCase().includes(searchWord.toLowerCase());\n        }\n    );\n\n    if (searchWord === \"\") {\n      setFilteredData([]);\n    } else {\n      setFilteredData(newFilter);\n    }\n  };\n\n  const clearInput = () => {\n    setFilteredData([]);\n    setWordEntered(\"\");\n  };\n\n  return (\n    <div className=\"search\">\n      <div className=\"searchInputs\">\n        <input\n          type=\"text\"\n          placeholder={placeholder}\n          value={wordEntered}\n          onChange={handleFilter}\n        />\n      </div>\n      {filteredData.length != 0 && (\n        <div className=\"dataResult\">\n          {filteredData.slice(0, 15).map((value, key) => {\n            return (\n              <a className=\"dataItem\" href={value.link} target=\"_blank\">\n                <p>{value.title} </p>\n              </a>\n            );\n          })}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default SearchBar;","/home/ghait/Desktop/Desta25/DestaFend/src/MainApp.js",[],"/home/ghait/Desktop/Desta25/DestaFend/src/components/App.js",["46","47","48"],"import React, {useState, useEffect} from \"react\";\nimport axios from \"axios\";\nimport '../index.css';\nimport './SearchBar.js'\nimport NavBar from './NavBar.js'\nimport SearchBar from './SearchBar';\n\n\nfunction App() {\n  const [values,setValues] = useState({\n    businessName: \"\",\n    businessOwnerName: \"\",\n    description: \"\",\n    address: \"\",\n    publicContact: \"\",\n    businessContact: \"\",\n    image: './default_img.jpeg',\n    tags: \"\",\n  });\n\n  function send(){\n    let industry_clone = [...industry];\n    let neighbourhood_clone = [...neighbourhood];\n    \n    for(var i = 0; i < industry_clone.length; i++) {\n      industry_clone[i] = JSON.stringify(industry_clone[i]);\n    }\n    for(var j = 0; j < neighbourhood_clone.length; j++) {\n      neighbourhood_clone[j] = JSON.stringify(neighbourhood_clone[j]);\n    }\n\n    var formData = new FormData();\n    Object.keys(values).forEach((key) => {\n      formData.append(key, values[key]);\n    })\n    formData.append(\"industrySize\", industry_clone.length);\n    formData.append(\"neighbourhoodSize\", neighbourhood_clone.length);\n\n    for(var k = 0; k < industry_clone.length; k++) {\n      formData.append(\"industry\"+k, industry_clone[k]);\n    }\n    for(var k = 0; k < neighbourhood_clone.length; k++) {\n      formData.append(\"neighbourhood\"+k, neighbourhood_clone[k]);\n    }\n    \n    axios.post('http://localhost:3003/url/saveProfile', formData, {\n      headers: {\n        \"content-Type\": 'multipart/form-data'\n      }\n    })\n\n    .then((response) => {\n      console.log(response);\n    }, (error) => {\n      console.log(error);\n    });\n  }\n\n  const[submitted, setSubmitted] = useState(false);\n  const[valid,setValid] = useState(false);\n\n  const handleBusinessNameInputChange = (event) => {\n    setValues({...values, businessName: event.target.value})\n  }\n  const handleOwnerNameInputChange = (event) => {\n    setValues({...values, businessOwnerName: event.target.value})\n  }\n  const handleDescriptionInputChange = (event) => {\n    setValues({...values, description: event.target.value})\n  }\n  const handleAddressInputChange = (event) => {\n    setValues({...values, address: event.target.value})\n  }\n  const handlePublicContactInputChange = (event) => {\n    setValues({...values, publicContact: event.target.value})\n  }\n  const handleBusinessContactInputChange = (event) => {\n    setValues({...values, businessContact: event.target.value})\n  }\n  const handleImageChange = (event) => {\n    setValues({...values,image: event.target.files[0]})\n  }\n  const handleTagsChange = (event) => {\n    setValues({...values,tags: event.target.value})\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if(values.businessOwnerName && values.businessName && values.businessContact){\n      send();\n      setValid(true);\n      window.location.href = '/';\n      \n    }\n    setSubmitted(true);\n    \n  }\n\n\n    //the tags array should be filled with all the tags that we have\n    const [industry,setindustryFlag] = useState([\n      {\n        name: \"food\",\n        flag: false\n      },\n      {\n        name: \"accomodation\",\n        flag: false\n      },\n      {\n        name: \"arts\",\n        flag: false\n      },\n      {\n        name: \"entertainment\",\n        flag: false\n      },\n      {\n        name: \"recreation\",\n        flag: false\n      },\n      {\n        name: \"construction\",\n        flag: false\n      },\n      {\n        name: \"education\",\n        flag: false\n      },\n      {\n        name: \"healthcare\",\n        flag: false\n      },\n      {\n        name: \"manufacturing\",\n        flag: false\n      },\n      {\n        name: \"real estate\",\n        flag: false\n      },\n      {\n        name: \"retail\",\n        flag: false\n      },\n      {\n        name: \"wholesale\",\n        flag: false\n      },\n      {\n        name: \"clothing\",\n        flag: false\n      }\n    ]);\n\n    const [neighbourhood,setneighbourhoodFlag] = useState([\n      {\n        name: \"downtown\",\n        flag: false\n      },\n      {\n        name: \"old montreal\",\n        flag: false\n      },\n      {\n        name: \"plateau and mile end\",\n        flag: false\n      },\n      {\n        name: \"the village\",\n        flag: false\n      },\n      {\n        name: \"mont royal and outrement\",\n        flag: false\n      },\n      {\n        name: \"hochelaga-maisonneuve\",\n        flag: false\n      },\n      {\n        name: \"little italy and villeray\",\n        flag: false\n      },\n      {\n        name: \"les quartiers du canal\",\n        flag: false\n      },\n      {\n        name: \"west island\",\n        flag: false\n      },\n      {\n        name: \"pole des rapides\",\n        flag: false\n      }\n    ]);\n    \n   // const [checkedIndustryState, setIndustryCheckedState] = useState(\n    //  new Array(industry.length).fill(false)\n   // );\n\n   // const [checkedNeighbourhoodState, setNeighbourhoodCheckedState] = useState(\n     // new Array(neighbourhood.length).fill(false)\n    //);\n\n    //const handleIndustryOnChange = (position) => {\n     // const updatedIndustryCheckedState = checkedIndustryState.map((item, index) =>\n       // index === position ? !item : item\n      //);\n\n      //setIndustryCheckedState(updatedIndustryCheckedState);\n     // industry[position].flag = !industry[position].flag\n    //}\n\n   // const handleNeighbourhoodOnChange = (position) => {\n     // const updatedNeighbourhoodCheckedState = checkedNeighbourhoodState.map((item, index) =>\n      //  index === position ? !item : item\n     // );\n\n      //setNeighbourhoodCheckedState(updatedNeighbourhoodCheckedState);\n      //neighbourhood[position].flag = !neighbourhood[position].flag\n    //}\n\n  return (\n    <>\n    <NavBar />  \n    <div class=\"form-container\">\n          <form className=\"register-form\" onSubmit={handleSubmit} encType=\"multipart/form-data\">\n            {submitted && valid ? <div className=\"success-message\">Success! Thank you for registering</div> : null}\n            <input\n              onChange={handleBusinessNameInputChange}\n              value={values.businessName}\n              className=\"form-field\"\n              type=\"text\"\n              placeholder=\"Business Name\"\n            />\n            {submitted && !values.businessName ? <span id=\"business-name-error\">Please enter a business name</span> : null}\n            <input\n              onChange={handleOwnerNameInputChange}\n              value={values.businessOwnerName}\n              className=\"form-field\"\n              type=\"text\"\n              placeholder=\"Owner Name\"\n            />\n            {submitted && !values.businessOwnerName ? <span id=\"owner-name-error\">Please enter a owner name</span> : null}\n            <input\n              onChange={handleBusinessContactInputChange}\n              value={values.businessContact}\n              className=\"form-field\"\n              type=\"text\"\n              placeholder=\"Private Contact\"\n            />\n            {submitted && !values.businessContact ? <span id=\"contact-error\">Please provide contact information.</span> : null}\n            <input\n              onChange={handleDescriptionInputChange}\n              value={values.description}\n              class=\"form-field\"\n              type=\"text\"\n              placeholder=\"Description\"\n            />\n            <input\n              onChange={handleAddressInputChange}\n              value={values.address}\n              class=\"form-field\"\n              type=\"text\"\n              placeholder=\"Address\"\n            />\n            <input\n              onChange={handlePublicContactInputChange}\n              value={values.publicContact}\n              class=\"form-field\"\n              type=\"text\"\n              placeholder=\"Public Contact\"\n            />\n            <label for=\"image-upload\">Upload a background image:</label>\n            <input\n              accept=\"image/*\"\n              onChange={handleImageChange}\n              class=\"form-field\"\n              id=\"image-upload\"\n              type=\"file\"\n              placeholder=\"Insert an image\"\n            />\n            <input\n              onChange={handleTagsChange}\n              value={values.tags}\n              class=\"form-field\"\n              type=\"text\"\n              placeholder=\"Enter some tags separated by commas\"\n            />\n            <h3>Select Industry</h3>\n                  <ul className=\"industry-list\">\n                    {industry.map(({ name },index) => {\n                      return (\n                        <li key={index}>\n                          <div className=\"indsutry-list-item\">\n                            <div className=\"left-section\">\n                              <input\n                                type=\"checkbox\"\n                                id={`custom-checkbox-${index}`}\n                                name={name}\n                                value={name}\n                                //checked={checkedIndustryState[index]}\n                                //onChange={() => handleIndustryOnChange(index)}\n                                onChange={(e) => {\n                                  let val = e.target.checked;\n                                  setindustryFlag(industry.map(cbox => {\n                                    if(cbox.name === e.target.name) { cbox.flag = val }\n                                    return cbox;\n                                  }))\n                                }}\n                              />\n                              <label htmlFor={`custom-checkbox-${index}`}>{name}</label>\n                            </div>\n                          </div>\n                        </li>\n                      );\n                    })}\n                  </ul>\n                  <h3>Select neighbourhood</h3>\n                  <ul className=\"industry-list\">\n                    {neighbourhood.map(({ name },index) => {\n                      return (\n                        <li key={index+industry.length}>\n                          <div className=\"industry-list-item\">\n                            <div className=\"left-section\">\n                              <input\n                                type=\"checkbox\"\n                                id={`custom-checkbox-${index + industry.length}`}\n                                name={name}\n                                value={name}\n                                //checked={checkedNeighbourhoodState[index]}\n                                //onChange={() => handleNeighbourhoodOnChange(index)}\n                                onChange={e => {\n                                  let val = e.target.checked;\n                                  setneighbourhoodFlag(neighbourhood.map(n => {\n                                    if(n.name === e.target.name) { n.flag = val }\n                                    return n;\n                                  }))\n                                }}\n                              />\n                              <label htmlFor={`custom-checkbox-${index+industry.length}`}>{name}</label>\n                            </div>\n                          </div>\n                        </li>\n                      );\n                    })}\n                  </ul>\n            <button class=\"form-field\" type=\"submit\">\n              Register\n            </button>\n          </form>\n    </div>\n    </>\n  )\n}\n\n\nexport default App;\n","/home/ghait/Desktop/Desta25/DestaFend/src/components/Tile.js",[],"/home/ghait/Desktop/Desta25/DestaFend/src/components/LandingPage.js",[],"/home/ghait/Desktop/Desta25/DestaFend/src/components/NavBar.js",[],"/home/ghait/Desktop/Desta25/DestaFend/src/components/BusinessPage.js",["49"],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":23,"column":9,"nodeType":"56","messageId":"57","endLine":23,"endColumn":19},{"ruleId":"58","severity":1,"message":"59","line":38,"column":28,"nodeType":"60","messageId":"61","endLine":38,"endColumn":30},{"ruleId":"62","severity":1,"message":"63","line":42,"column":15,"nodeType":"64","messageId":"65","endLine":42,"endColumn":73,"fix":"66"},{"ruleId":"54","severity":1,"message":"67","line":1,"column":26,"nodeType":"56","messageId":"57","endLine":1,"endColumn":35},{"ruleId":"54","severity":1,"message":"68","line":6,"column":8,"nodeType":"56","messageId":"57","endLine":6,"endColumn":17},{"ruleId":"69","severity":1,"message":"70","line":42,"column":13,"nodeType":"56","messageId":"71","endLine":42,"endColumn":14},{"ruleId":"72","severity":1,"message":"73","line":21,"column":8,"nodeType":"74","endLine":21,"endColumn":10,"suggestions":"75"},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-unused-vars","'clearInput' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","noTargetBlank",{"range":"78","text":"79"},"'useEffect' is defined but never used.","'SearchBar' is defined but never used.","no-redeclare","'k' is already defined.","redeclared","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchUser'. Either include it or remove the dependency array.","ArrayExpression",["80"],"no-global-assign","no-unsafe-negation",[1142,1142]," rel=\"noreferrer\"",{"desc":"81","fix":"82"},"Update the dependencies array to be: [fetchUser]",{"range":"83","text":"84"},[521,523],"[fetchUser]"]