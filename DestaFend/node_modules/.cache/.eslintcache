[{"/home/ghait/Desktop/Desta25/DestaFend/src/index.js":"1","/home/ghait/Desktop/Desta25/DestaFend/src/App.js":"2","/home/ghait/Desktop/Desta25/DestaFend/src/reportWebVitals.js":"3","/home/ghait/Desktop/Desta25/DestaFend/src/components/Navbar.js":"4","/home/ghait/Desktop/Desta25/DestaFend/src/components/CompanyCardLayout.js":"5","/home/ghait/Desktop/Desta25/DestaFend/src/components/RecentInfoStack.js":"6","/home/ghait/Desktop/Desta25/DestaFend/src/components/CompanyPageCard.js":"7","/home/ghait/Desktop/Desta25/DestaFend/src/components/SimilarCompanyStack.js":"8","/home/ghait/Desktop/Desta25/DestaFend/src/components/SpecificInfoStack.js":"9","/home/ghait/Desktop/Desta25/DestaFend/src/Page/BusinessPage.js":"10","/home/ghait/Desktop/Desta25/DestaFend/src/components/Form.js":"11","/home/ghait/Desktop/Desta25/DestaFend/src/components/SearchBar.js":"12","/home/ghait/Desktop/Desta25/DestaFend/src/components/CompanyCard.js":"13","/home/ghait/Desktop/Desta25/DestaFend/src/components/RecentInfo.js":"14","/home/ghait/Desktop/Desta25/DestaFend/src/components/Overview.js":"15"},{"size":500,"mtime":1632097379000,"results":"16","hashOfConfig":"17"},{"size":1092,"mtime":1632099087932,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1632097379000,"results":"19","hashOfConfig":"17"},{"size":1402,"mtime":1632108435427,"results":"20","hashOfConfig":"17"},{"size":7020,"mtime":1632107448449,"results":"21","hashOfConfig":"17"},{"size":472,"mtime":1632097379000,"results":"22","hashOfConfig":"17"},{"size":1223,"mtime":1632097379000,"results":"23","hashOfConfig":"17"},{"size":1638,"mtime":1632097379000,"results":"24","hashOfConfig":"17"},{"size":2181,"mtime":1632097379000,"results":"25","hashOfConfig":"17"},{"size":1160,"mtime":1632108199492,"results":"26","hashOfConfig":"17"},{"size":13176,"mtime":1632104274499,"results":"27","hashOfConfig":"17"},{"size":3935,"mtime":1632101364426,"results":"28","hashOfConfig":"17"},{"size":1610,"mtime":1632110917886,"results":"29","hashOfConfig":"17"},{"size":251,"mtime":1632097379000,"results":"30","hashOfConfig":"17"},{"size":656,"mtime":1632097379000,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1axee0i",{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":4,"source":"44","usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/home/ghait/Desktop/Desta25/DestaFend/src/index.js",[],["70","71"],"/home/ghait/Desktop/Desta25/DestaFend/src/App.js",["72","73","74","75","76","77","78","79"],"import logo from './logo.svg';\nimport './App.css';\nimport './Form.css';\nimport Navbar from \"./components/Navbar\";\nimport { Route, Switch, Redirect, BrowserRouter as Router } from \"react-router-dom\";\n\nimport CompanyCardLayout from \"./components/CompanyCardLayout\";\nimport RecentInfoStack from \"./components/RecentInfoStack\";\nimport CompanyPageCard from \"./components/CompanyPageCard\";\nimport SimilarCompanyStack from \"./components/SimilarCompanyStack\";\nimport SpecificInfoStack from \"./components/SpecificInfoStack\";\nimport BusinessPage from \"./Page/BusinessPage\";\nimport Form from \"./components/Form\";\n\nfunction App() {\n  return (\n      <>\n          {window.location.href != 'http://localhost:3000/form' && <Navbar/> }\n          {/* <CompanyCardLayout/> */}\n          <Router>\n              <Switch>\n                  <Route path=\"/home\">\n                      <CompanyCardLayout />\n                  </Route>\n\n                  <Route path=\"/form\">\n                      <Form />\n                  </Route>\n              </Switch>\n          </Router>\n\n      </>\n\n  );\n}\n\nexport default App;\n","/home/ghait/Desktop/Desta25/DestaFend/src/reportWebVitals.js",[],"/home/ghait/Desktop/Desta25/DestaFend/src/components/Navbar.js",["80","81","82","83"],"/home/ghait/Desktop/Desta25/DestaFend/src/components/CompanyCardLayout.js",["84","85","86","87","88","89","90","91","92","93"],"import * as React from 'react';\nimport {useState,useEffect} from 'react';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport CompanyCard from \"./CompanyCard\";\nimport BusinessPage from \"../Page/BusinessPage\";\nimport SearchBar from './SearchBar';\nimport { IoSearch } from \"react-icons/io5\"\nimport { IoClose } from \"react-icons/io5\";\nimport './search.css'\nimport { v4 as uuidv4 } from 'uuid';\n\n\nconst axios = require('axios').default;\n\nexport default function CompanyCardLayout() {\n\n    const[companyInfo,setCompanyInfo] = useState([]);\n    const [selectedCompany, setSelectedCompany] = useState(null);\n    const [company, setCompany] = useState({});\n    const [cloneBinfo, setCloneBinfo] = useState([]);\n    const [filteredData, setFilteredData] = useState([]);\n    const [filteredDataIndustry, setFilteredDataIndustry] = useState([]);\n    const [filteredDataNeighbourhood, setFilteredDataNeighbourhood] = useState([]);\n    const [filteredDataTags, setFilteredDataTags] = useState([]);\n    const [wordEntered, setWordEntered] = useState(\"\");\n    const [flag, setFlag] = useState(true);\n  \n  \n    const handleFilter = (event) => {\n      const searchWord = event.target.value;\n      \n      if(searchWord.length != 0){\n        setFlag(false);\n      }else{\n        setFlag(true);\n        clearInput();\n      }\n  \n      setWordEntered(searchWord);\n  \n      const newFilter = companyInfo.filter((value) => {\n          return value.businessName.toLowerCase().includes(searchWord.toLowerCase());\n      }\n      );\n      const newIndustryFilter = companyInfo.filter((value) => {\n        return value.industries.some((e => e.toLowerCase().includes(searchWord.toLowerCase())));\n        \n      }\n      );\n      const newNeighbourhoodFilter = companyInfo.filter((value) => {\n        return value.neighbourhoods.some((e => e.toLowerCase().includes(searchWord.toLowerCase())));\n      }\n      );\n      const newTagsFilter = companyInfo.filter((value) => {\n        return value.tags.some((e => e.toLowerCase().includes(searchWord.toLowerCase())));\n      }\n      );\n  \n      if (searchWord === \"\") {\n        setFilteredData([]);\n        setFilteredDataIndustry([]);\n        setFilteredDataNeighbourhood([]);\n        setFilteredDataTags([]);\n      } else {\n        \n        setFilteredData(newFilter);\n        setFilteredDataIndustry(newIndustryFilter);\n        setFilteredDataNeighbourhood(newNeighbourhoodFilter);\n        setFilteredDataTags(newTagsFilter);\n      }\n    };\n  \n    const clearInput = () => {\n      setFilteredData([]);\n      setFilteredDataIndustry([]);\n      setFilteredDataNeighbourhood([]);\n      setFilteredDataTags([]);\n      setCloneBinfo(companyInfo);\n      setWordEntered(\"\");\n      setFlag(true)\n    };\n    \n    const onsubmit = (event) => {\n      event.preventDefault();\n      let newMaster = []\n      var masterList = filteredData.concat(filteredDataIndustry,filteredDataNeighbourhood,filteredDataTags);\n      for(var i = 0; i < masterList.length; i++) {\n          let tmp = masterList[i];\n          let canPush = true;\n          for(var j = i + 1; j < masterList.length; j++) {\n              if(masterList[j] === tmp){\n                  canPush = false;\n              }\n          }\n          if(canPush) {\n              newMaster.push(tmp);\n          }\n      }\n\n\n      setCloneBinfo(newMaster);\n      /* instead of logging, we can output every business in this list as tiles on the users screen */\n      //setCompanyInfo(masterList);\n      \n    }\n      function getData() {\n          axios.get(\"http://localhost:3003/getdata\") //need to add the params later\n          .then( res =>{ setCompanyInfo(res.data); setCloneBinfo(res.data); })\n          .catch( err => console.log(err))\n      }\n  \n      useEffect(() => {\n          getData();\n      }, [])    \n\n      const getCompanyInfo = async () => {\n        //try{\n            const response = await axios.get(\"http://localhost:3003/getdata\");\n            setCloneBinfo(response.data);\n            //setCloneBinfo(response.data);\n            //console.log(selectedCompany);\n\n        }\n\n    //useEffect(() =>{getCompanyInfo();},[selectedCompany]);\n\n\n    const show = (id) => {\n        console.log(id);\n    }\n\n    \n        //catch(err) {\n            //console.log(err);\n        //}\n    //}\n\n\n\n            if(selectedCompany == null) {\n                return (\n                    <>\n        <div className=\"search\">\n        <div className=\"searchInputs\">\n            <form onSubmit={onsubmit} className=\"searchBox\">\n            <input\n            type=\"text\"\n            placeholder=\"Find a business\"\n            value={wordEntered}\n            onChange={handleFilter}\n            />\n            </form>\n            <div className=\"searchIcon\">\n            {flag ? (\n                <IoSearch />\n            ) : (\n                <IoClose id=\"clearBtn\" onClick={clearInput} />\n            )}\n            </div>\n        </div>\n        {(\n            <div className=\"dataResult\">\n            {filteredData.slice(0, 15).map((value, key) => {\n                return (\n                <a className=\"dataItem\" href={value.link} target=\"_blank\">\n                    <p>{value.businessName} </p>\n                </a>\n                );\n            })}\n            {filteredDataIndustry.slice(0, 15).map((value, key) => {\n                return (\n                <a className=\"dataItem\" href={value.link} target=\"_blank\">\n                    <p>{value.businessName} </p>\n                </a>\n                );\n            })}\n            {filteredDataNeighbourhood.slice(0, 15).map((value, key) => {\n                return (\n                <a className=\"dataItem\" href={value.link} target=\"_blank\">\n                    <p>{value.businessName} </p>\n                </a>\n                );\n            })}\n            {filteredDataTags.slice(0, 15).map((value, key) => {\n                return (\n                <a className=\"dataItem\" href={value.link} target=\"_blank\">\n                    <p>{value.businessName} </p>\n                </a>\n                );\n            })}\n            </div>\n        )}\n        </div>\n\n\n\n\n\n                    <Box sx={{flexGrow: 1, margin: 5}}>\n                        <Grid container spacing={{xs: 2, md: 3}} columns={{xs: 4, sm: 8, md: 12}}>\n                            {cloneBinfo.map(\n                                item => <CompanyCard\n                                    key={uuidv4()}\n                                    id={item._id.$oid}\n                                    name={item.businessName}\n                                    location={item.address}\n                                    desc={item.description}\n                                    company={item}\n                                    textImage={item.image}\n                                    click={setSelectedCompany}/>)}\n                        </Grid>\n                    </Box></>);\n            } else{\n                return <BusinessPage id={selectedCompany._id} company={selectedCompany}  />\n            }\n\n        }\n\n","/home/ghait/Desktop/Desta25/DestaFend/src/components/RecentInfoStack.js",[],"/home/ghait/Desktop/Desta25/DestaFend/src/components/CompanyPageCard.js",["94"],"import * as React from 'react';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport {Divider} from \"@mui/material\";\n\nexport default function CompanyPageCard({company,textImage}) {\n    return (\n        <Card sx={{ maxWidth: 800 }}>\n            <CardMedia\n                component=\"img\"\n                height=\"140\"\n                image={\"data:image;base64,\"+company.image}\n                alt=\"place holder\"\n            />\n            <CardContent>\n                <Typography gutterBottom variant=\"h5\" component=\"div\">\n                    {company.businessName}\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                    {company.address}\n                </Typography>\n            </CardContent>\n            <CardActions>\n                <Button size=\"small\" variant=\"contained\">Website</Button>\n                <Button size=\"small\" variant=\"outlined\">Share</Button>\n            </CardActions>\n\n        </Card>\n    );\n}","/home/ghait/Desktop/Desta25/DestaFend/src/components/SimilarCompanyStack.js",["95","96","97"],"import * as React from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Typography from '@mui/material/Typography';\nimport Stack from \"@mui/material/Stack\";\nimport Grid from \"@mui/material/Grid\";\nimport CompanyCard from \"./CompanyCard\";\nimport {CardActionArea} from \"@mui/material\";\n\n\n function SimilarCompany() {\n\n    return (\n        <Card sx={{ display: 'flex' }}>\n            <CardActionArea>\n\n                <Box sx={{ display: 'flex', flexDirection: 'column'}}>\n                    <CardContent sx={{ flex: '1 0 auto' }}>\n                        <Typography component=\"div\" variant=\"h5\">\n                            Company Name\n                        </Typography>\n                        <Typography variant=\"subtitle1\" color=\"text.secondary\" component=\"div\">\n                            Sector\n                        </Typography>\n                    </CardContent>\n                </Box>\n\n            </CardActionArea>\n\n            <CardMedia\n                component=\"img\"\n                sx={{ width: 200 }}\n                image=\"https://www.nomadfoods.com/wp-content/uploads/2018/08/placeholder-1-e1533569576673-960x960.png\"\n                alt=\"company logo\"\n            />\n\n        </Card>\n    );\n}\n\nexport default  function SimilarCompanyStack(){\n     return(\n         <Stack spacing={2}>\n             {Array.from(Array(6)).map((_, index) => (\n                 <SimilarCompany/>\n             ))}\n         </Stack>\n\n     )\n}","/home/ghait/Desktop/Desta25/DestaFend/src/components/SpecificInfoStack.js",["98","99","100","101","102","103","104","105","106","107"],"import * as React from 'react';\nimport Paper from '@mui/material/Paper';\nimport Stack from '@mui/material/Stack';\nimport { styled } from '@mui/material/styles';\nimport Typography from \"@mui/material/Typography\";\nimport {useState,useEffect} from 'react';\nimport {default as axios} from \"axios\";\nimport CompanyCard from \"./CompanyCard\";\n\n\n\nfunction  SpecificInfo({name,title}){\n\n    return(\n        <Typography variant=\"div\"\n                    mt={3}\n                    sx={{display:\"flex\", flexWrap:\"wrap\",flexDirection:\"row\", alignItems:\"center\", justifyContent:\"space-between\" , width:\"45%\"}}>\n            <Typography variant=\"h6\">\n                {title}:\n            </Typography>\n            <Typography variant=\"body2\">\n                {name}\n            </Typography>\n        </Typography>\n    )\n\n}\n\nexport default function SpecificInfoStack({id,company}) {\n    id='614683a2d2a2a5d868cd1520';\n    function checkID(compId) {\n        return compId == id;\n    }\n\n    const[companyInfo,setCompanyInfo] = useState([]);\n    const[selectedCompany, setSelectedCompany] = useState(company);\n    const[companyData, setCompanyData] = useState(null);\n\n\n    useEffect(() =>{getCompanyInfo();},[]);\n\n    const businessInfo = {\n        \"businessName\": company.businessName,\n        \"businessOwnerName\": company.businessOwnerName,\n        \"address\": company.address,\n        \"businessContact\": company.businessContact,\n        \"publicContact\": company.publicContact,\n        \"industries\": company.industries[0]\n    }\n\n    const keys = Object.keys(businessInfo);\n\n\n    const getCompanyInfo = async () => {\n        try{\n            const response = await axios.get(\"http://143.198.37.59:3003/\");\n            console.log(response.data);\n            setCompanyInfo(response.data);\n\n            console.log(response.data);\n            console.log(selectedCompany);\n\n\n        }\n        catch(err) {\n            console.log(err);\n        }\n\n    }\n\n\n    return (\n        <div>\n               <Stack spacing={2}>\n                   {\n                      keys.map(item=><SpecificInfo title={item} name={businessInfo[item]}/>)\n                   }\n\n                </Stack>\n\n        </div>\n    );\n}","/home/ghait/Desktop/Desta25/DestaFend/src/Page/BusinessPage.js",["108"],"/home/ghait/Desktop/Desta25/DestaFend/src/components/Form.js",["109","110"],"import React, {useState, useEffect} from \"react\";\nimport axios from \"axios\";\nimport '../index.css';\nimport '../SearchBar.css'\n\n\nfunction App() {\n    const [values,setValues] = useState({\n        businessName: \"\",\n        businessOwnerName: \"\",\n        description: \"\",\n        address: \"\",\n        publicContact: \"\",\n        businessContact: \"\",\n        image: './default_img.jpeg',\n        tags: \"\",\n    });\n\n    function send(){\n        let industry_clone = [...industry];\n        let neighbourhood_clone = [...neighbourhood];\n\n        for(var i = 0; i < industry_clone.length; i++) {\n            industry_clone[i] = JSON.stringify(industry_clone[i]);\n        }\n        for(var j = 0; j < neighbourhood_clone.length; j++) {\n            neighbourhood_clone[j] = JSON.stringify(neighbourhood_clone[j]);\n        }\n\n        var formData = new FormData();\n        Object.keys(values).forEach((key) => {\n            formData.append(key, values[key]);\n        })\n        formData.append(\"industrySize\", industry_clone.length);\n        formData.append(\"neighbourhoodSize\", neighbourhood_clone.length);\n\n        for(var k = 0; k < industry_clone.length; k++) {\n            formData.append(\"industry\"+k, industry_clone[k]);\n        }\n        for(var k = 0; k < neighbourhood_clone.length; k++) {\n            formData.append(\"neighbourhood\"+k, neighbourhood_clone[k]);\n        }\n\n        axios.post('http://localhost:3003/url/saveProfile', formData, {\n            headers: {\n                \"content-Type\": 'multipart/form-data'\n            }\n        })\n\n            .then((response) => {\n                console.log(response);\n            }, (error) => {\n                console.log(error);\n            });\n    }\n\n    const[submitted, setSubmitted] = useState(false);\n    const[valid,setValid] = useState(false);\n\n    const handleBusinessNameInputChange = (event) => {\n        setValues({...values, businessName: event.target.value})\n    }\n    const handleOwnerNameInputChange = (event) => {\n        setValues({...values, businessOwnerName: event.target.value})\n    }\n    const handleDescriptionInputChange = (event) => {\n        setValues({...values, description: event.target.value})\n    }\n    const handleAddressInputChange = (event) => {\n        setValues({...values, address: event.target.value})\n    }\n    const handlePublicContactInputChange = (event) => {\n        setValues({...values, publicContact: event.target.value})\n    }\n    const handleBusinessContactInputChange = (event) => {\n        setValues({...values, businessContact: event.target.value})\n    }\n    const handleImageChange = (event) => {\n        setValues({...values,image: event.target.files[0]})\n    }\n    const handleTagsChange = (event) => {\n        setValues({...values,tags: event.target.value})\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        if(values.businessOwnerName && values.businessName && values.businessContact){\n            send();\n            setValid(true);\n            window.location.href = '/home';\n\n        }\n        setSubmitted(true);\n\n    }\n\n\n    //the tags array should be filled with all the tags that we have\n    const [industry,setindustryFlag] = useState([\n        {\n            name: \"food\",\n            flag: false\n        },\n        {\n            name: \"accomodation\",\n            flag: false\n        },\n        {\n            name: \"arts\",\n            flag: false\n        },\n        {\n            name: \"entertainment\",\n            flag: false\n        },\n        {\n            name: \"recreation\",\n            flag: false\n        },\n        {\n            name: \"construction\",\n            flag: false\n        },\n        {\n            name: \"education\",\n            flag: false\n        },\n        {\n            name: \"healthcare\",\n            flag: false\n        },\n        {\n            name: \"manufacturing\",\n            flag: false\n        },\n        {\n            name: \"real estate\",\n            flag: false\n        },\n        {\n            name: \"retail\",\n            flag: false\n        },\n        {\n            name: \"wholesale\",\n            flag: false\n        },\n        {\n            name: \"clothing\",\n            flag: false\n        }\n    ]);\n\n    const [neighbourhood,setneighbourhoodFlag] = useState([\n        {\n            name: \"downtown\",\n            flag: false\n        },\n        {\n            name: \"old montreal\",\n            flag: false\n        },\n        {\n            name: \"plateau and mile end\",\n            flag: false\n        },\n        {\n            name: \"the village\",\n            flag: false\n        },\n        {\n            name: \"mont royal and outrement\",\n            flag: false\n        },\n        {\n            name: \"hochelaga-maisonneuve\",\n            flag: false\n        },\n        {\n            name: \"little italy and villeray\",\n            flag: false\n        },\n        {\n            name: \"les quartiers du canal\",\n            flag: false\n        },\n        {\n            name: \"west island\",\n            flag: false\n        },\n        {\n            name: \"pole des rapides\",\n            flag: false\n        }\n    ]);\n\n    // const [checkedIndustryState, setIndustryCheckedState] = useState(\n    //  new Array(industry.length).fill(false)\n    // );\n\n    // const [checkedNeighbourhoodState, setNeighbourhoodCheckedState] = useState(\n    // new Array(neighbourhood.length).fill(false)\n    //);\n\n    //const handleIndustryOnChange = (position) => {\n    // const updatedIndustryCheckedState = checkedIndustryState.map((item, index) =>\n    // index === position ? !item : item\n    //);\n\n    //setIndustryCheckedState(updatedIndustryCheckedState);\n    // industry[position].flag = !industry[position].flag\n    //}\n\n    // const handleNeighbourhoodOnChange = (position) => {\n    // const updatedNeighbourhoodCheckedState = checkedNeighbourhoodState.map((item, index) =>\n    //  index === position ? !item : item\n    // );\n\n    //setNeighbourhoodCheckedState(updatedNeighbourhoodCheckedState);\n    //neighbourhood[position].flag = !neighbourhood[position].flag\n    //}\n\n    return (\n        <>\n            <div class=\"form-container\">\n                <form  className=\"register-form\" onSubmit={handleSubmit} encType=\"multipart/form-data\">\n                    {submitted && valid ? <div className=\"success-message\">Success! Thank you for registering</div> : null}\n                    <input\n                        onChange={handleBusinessNameInputChange}\n                        value={values.businessName}\n                        className=\"form-field\"\n                        type=\"text\"\n                        placeholder=\"Business Name\"\n                    />\n                    {submitted && !values.businessName ? <span id=\"business-name-error\">Please enter a business name</span> : null}\n                    <input\n                        onChange={handleOwnerNameInputChange}\n                        value={values.businessOwnerName}\n                        className=\"form-field\"\n                        type=\"text\"\n                        placeholder=\"Owner Name\"\n                    />\n                    {submitted && !values.businessOwnerName ? <span id=\"owner-name-error\">Please enter a owner name</span> : null}\n                    <input\n                        onChange={handleBusinessContactInputChange}\n                        value={values.businessContact}\n                        className=\"form-field\"\n                        type=\"text\"\n                        placeholder=\"Private Contact\"\n                    />\n                    {submitted && !values.businessContact ? <span id=\"contact-error\">Please provide contact information.</span> : null}\n                    <input\n                        onChange={handleDescriptionInputChange}\n                        value={values.description}\n                        class=\"form-field\"\n                        type=\"text\"\n                        placeholder=\"Description\"\n                    />\n                    <input\n                        onChange={handleAddressInputChange}\n                        value={values.address}\n                        class=\"form-field\"\n                        type=\"text\"\n                        placeholder=\"Address\"\n                    />\n                    <input\n                        onChange={handlePublicContactInputChange}\n                        value={values.publicContact}\n                        class=\"form-field\"\n                        type=\"text\"\n                        placeholder=\"Public Contact\"\n                    />\n                    <label for=\"image-upload\">Upload a background image:</label>\n                    <input\n                        accept=\"image/*\"\n                        onChange={handleImageChange}\n                        class=\"form-field\"\n                        id=\"image-upload\"\n                        type=\"file\"\n                        placeholder=\"Insert an image\"\n                    />\n                    <input\n                        onChange={handleTagsChange}\n                        value={values.tags}\n                        class=\"form-field\"\n                        type=\"text\"\n                        placeholder=\"Enter some tags separated by commas\"\n                    />\n                    <h3>Select Industry</h3>\n                    <ul className=\"industry-list\" style={{marginTop:\"0px\"}}>\n                        {industry.map(({ name },index) => {\n                            return (\n                                <li key={index}>\n                                    <div className=\"indsutry-list-item\">\n                                        <div className=\"left-section\">\n                                            <input\n                                                type=\"checkbox\"\n                                                id={`custom-checkbox-${index}`}\n                                                name={name}\n                                                value={name}\n                                                //checked={checkedIndustryState[index]}\n                                                //onChange={() => handleIndustryOnChange(index)}\n                                                onChange={(e) => {\n                                                    let val = e.target.checked;\n                                                    setindustryFlag(industry.map(cbox => {\n                                                        if(cbox.name === e.target.name) { cbox.flag = val }\n                                                        return cbox;\n                                                    }))\n                                                }}\n                                            />\n                                            <label htmlFor={`custom-checkbox-${index}`}>{name}</label>\n                                        </div>\n                                    </div>\n                                </li>\n                            );\n                        })}\n                    </ul>\n                    <h3>Select neighbourhood</h3>\n                    <ul className=\"industry-list\" style={{marginTop:\"0px\"}}>\n                        {neighbourhood.map(({ name },index) => {\n                            return (\n                                <li key={index+industry.length}>\n                                    <div className=\"industry-list-item\">\n                                        <div className=\"left-section\">\n                                            <input\n                                                type=\"checkbox\"\n                                                id={`custom-checkbox-${index + industry.length}`}\n                                                name={name}\n                                                value={name}\n                                                //checked={checkedNeighbourhoodState[index]}\n                                                //onChange={() => handleNeighbourhoodOnChange(index)}\n                                                onChange={e => {\n                                                    let val = e.target.checked;\n                                                    setneighbourhoodFlag(neighbourhood.map(n => {\n                                                        if(n.name === e.target.name) { n.flag = val }\n                                                        return n;\n                                                    }))\n                                                }}\n                                            />\n                                            <label htmlFor={`custom-checkbox-${index+industry.length}`}>{name}</label>\n                                        </div>\n                                    </div>\n                                </li>\n                            );\n                        })}\n                    </ul>\n                    <button class=\"form-field\" type=\"submit\" onclick=\"window.location.href='http://localhost:3000/home/';\">\n                        <a href=\"/home\">Register</a>\n                    </button>\n                </form>\n            </div>\n        </>\n    )\n}\n\n\nexport default App;","/home/ghait/Desktop/Desta25/DestaFend/src/components/SearchBar.js",["111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126"],"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Input from '@mui/material/Input';\nimport InputLabel from '@mui/material/InputLabel';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport FormControl from '@mui/material/FormControl';\nimport TextField from '@mui/material/TextField';\nimport SearchIcon from '@mui/icons-material/Search';\nimport {OutlinedInput} from \"@mui/material\";\nimport {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport { IoSearch } from \"react-icons/io5\"\nimport { IoClose } from \"react-icons/io5\";\n\n\nexport default function SearchBar(){\n    const [binfo, setBinfoState] = useState([]);\n    const [cloneBinfo, setCloneBinfo] = useState([]);\n    const [filteredData, setFilteredData] = useState([]);\n    const [filteredDataIndustry, setFilteredDataIndustry] = useState([]);\n    const [filteredDataNeighbourhood, setFilteredDataNeighbourhood] = useState([]);\n    const [filteredDataTags, setFilteredDataTags] = useState([]);\n    const [wordEntered, setWordEntered] = useState(\"\");\n    const [flag, setFlag] = useState(true);\n  \n  \n    const handleFilter = (event) => {\n      const searchWord = event.target.value;\n      \n      if(searchWord.length != 0){\n        setFlag(false);\n      }else{\n        setFlag(true);\n        clearInput();\n      }\n  \n      setWordEntered(searchWord);\n  \n      const newFilter = binfo.filter((value) => {\n          return value.businessName.toLowerCase().includes(searchWord.toLowerCase());\n      }\n      );\n      const newIndustryFilter = binfo.filter((value) => {\n        return value.industries.some((e => e.toLowerCase().includes(searchWord.toLowerCase())));\n        \n      }\n      );\n      const newNeighbourhoodFilter = binfo.filter((value) => {\n        return value.neighbourhoods.some((e => e.toLowerCase().includes(searchWord.toLowerCase())));\n      }\n      );\n      const newTagsFilter = binfo.filter((value) => {\n        return value.tags.some((e => e.toLowerCase().includes(searchWord.toLowerCase())));\n      }\n      );\n  \n      if (searchWord === \"\") {\n        setFilteredData([]);\n        setFilteredDataIndustry([]);\n        setFilteredDataNeighbourhood([]);\n        setFilteredDataTags([]);\n      } else {\n        \n        setFilteredData(newFilter);\n        setFilteredDataIndustry(newIndustryFilter);\n        setFilteredDataNeighbourhood(newNeighbourhoodFilter);\n        setFilteredDataTags(newTagsFilter);\n      }\n    };\n  \n    const clearInput = () => {\n      setFilteredData([]);\n      setFilteredDataIndustry([]);\n      setFilteredDataNeighbourhood([]);\n      setFilteredDataTags([]);\n      setCloneBinfo(binfo);\n      setWordEntered(\"\");\n      setFlag(true)\n    };\n  \n    const onsubmit = (event) => {\n      event.preventDefault();\n      var masterList = filteredData.concat(filteredDataIndustry,filteredDataNeighbourhood,filteredDataTags);\n      setCloneBinfo(masterList);\n      /* instead of logging, we can output every business in this list as tiles on the users screen */\n      console.log(masterList);\n      \n    }\n      function getData() {\n          axios.get(\"http://localhost:3003/getdata\") //need to add the params later\n          .then( res =>{ setBinfoState(res.data); setCloneBinfo(res.data); })\n          .catch( err => console.log(err))\n      }\n  \n      useEffect(() => {\n          getData();\n      }, [])\n    return(\n        //<Box sx={{ '& > :not(style)': { m: 1,width: '25ch'} }}>\n            //<FormControl variant=\"outlined\">\n                //<OutlinedInput\n                    //sx={{height:'5ch'}}\n                    //id=\"input-with-icon-adornment\"\n                    //startAdornment={\n                        //<InputAdornment position=\"start\">\n                            //<SearchIcon />\n                        //</InputAdornment>\n                    //}\n                ///>\n            //</FormControl>\n        //</Box>\n        <>\n    \n        \n        </>\n        \n\n    );\n}","/home/ghait/Desktop/Desta25/DestaFend/src/components/CompanyCard.js",["127","128"],"/home/ghait/Desktop/Desta25/DestaFend/src/components/RecentInfo.js",[],"/home/ghait/Desktop/Desta25/DestaFend/src/components/Overview.js",[],{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","severity":1,"message":"134","line":1,"column":8,"nodeType":"135","messageId":"136","endLine":1,"endColumn":12},{"ruleId":"133","severity":1,"message":"137","line":5,"column":25,"nodeType":"135","messageId":"136","endLine":5,"endColumn":33},{"ruleId":"133","severity":1,"message":"138","line":8,"column":8,"nodeType":"135","messageId":"136","endLine":8,"endColumn":23},{"ruleId":"133","severity":1,"message":"139","line":9,"column":8,"nodeType":"135","messageId":"136","endLine":9,"endColumn":23},{"ruleId":"133","severity":1,"message":"140","line":10,"column":8,"nodeType":"135","messageId":"136","endLine":10,"endColumn":27},{"ruleId":"133","severity":1,"message":"141","line":11,"column":8,"nodeType":"135","messageId":"136","endLine":11,"endColumn":25},{"ruleId":"133","severity":1,"message":"142","line":12,"column":8,"nodeType":"135","messageId":"136","endLine":12,"endColumn":20},{"ruleId":"143","severity":1,"message":"144","line":18,"column":33,"nodeType":"145","messageId":"146","endLine":18,"endColumn":35},{"ruleId":"133","severity":1,"message":"147","line":5,"column":8,"nodeType":"135","messageId":"136","endLine":5,"endColumn":17},{"ruleId":"133","severity":1,"message":"148","line":8,"column":10,"nodeType":"135","messageId":"136","endLine":8,"endColumn":17},{"ruleId":"133","severity":1,"message":"149","line":21,"column":12,"nodeType":"135","messageId":"136","endLine":21,"endColumn":17},{"ruleId":"150","severity":1,"message":"151","line":29,"column":13,"nodeType":"152","endLine":29,"endColumn":72},{"ruleId":"133","severity":1,"message":"147","line":7,"column":8,"nodeType":"135","messageId":"136","endLine":7,"endColumn":17},{"ruleId":"133","severity":1,"message":"153","line":20,"column":12,"nodeType":"135","messageId":"136","endLine":20,"endColumn":19},{"ruleId":"133","severity":1,"message":"154","line":20,"column":21,"nodeType":"135","messageId":"136","endLine":20,"endColumn":31},{"ruleId":"143","severity":1,"message":"144","line":33,"column":28,"nodeType":"145","messageId":"146","endLine":33,"endColumn":30},{"ruleId":"133","severity":1,"message":"155","line":117,"column":13,"nodeType":"135","messageId":"136","endLine":117,"endColumn":27},{"ruleId":"133","severity":1,"message":"156","line":129,"column":11,"nodeType":"135","messageId":"136","endLine":129,"endColumn":15},{"ruleId":"157","severity":1,"message":"158","line":166,"column":17,"nodeType":"152","messageId":"159","endLine":166,"endColumn":75,"fix":"160"},{"ruleId":"157","severity":1,"message":"158","line":173,"column":17,"nodeType":"152","messageId":"159","endLine":173,"endColumn":75,"fix":"161"},{"ruleId":"157","severity":1,"message":"158","line":180,"column":17,"nodeType":"152","messageId":"159","endLine":180,"endColumn":75,"fix":"162"},{"ruleId":"157","severity":1,"message":"158","line":187,"column":17,"nodeType":"152","messageId":"159","endLine":187,"endColumn":75,"fix":"163"},{"ruleId":"133","severity":1,"message":"164","line":8,"column":9,"nodeType":"135","messageId":"136","endLine":8,"endColumn":16},{"ruleId":"133","severity":1,"message":"165","line":2,"column":10,"nodeType":"135","messageId":"136","endLine":2,"endColumn":18},{"ruleId":"133","severity":1,"message":"166","line":9,"column":8,"nodeType":"135","messageId":"136","endLine":9,"endColumn":12},{"ruleId":"133","severity":1,"message":"167","line":10,"column":8,"nodeType":"135","messageId":"136","endLine":10,"endColumn":19},{"ruleId":"133","severity":1,"message":"168","line":2,"column":8,"nodeType":"135","messageId":"136","endLine":2,"endColumn":13},{"ruleId":"133","severity":1,"message":"169","line":4,"column":10,"nodeType":"135","messageId":"136","endLine":4,"endColumn":16},{"ruleId":"133","severity":1,"message":"167","line":8,"column":8,"nodeType":"135","messageId":"136","endLine":8,"endColumn":19},{"ruleId":"133","severity":1,"message":"170","line":31,"column":14,"nodeType":"135","messageId":"136","endLine":31,"endColumn":21},{"ruleId":"143","severity":1,"message":"171","line":32,"column":23,"nodeType":"145","messageId":"146","endLine":32,"endColumn":25},{"ruleId":"133","severity":1,"message":"172","line":35,"column":11,"nodeType":"135","messageId":"136","endLine":35,"endColumn":22},{"ruleId":"133","severity":1,"message":"173","line":36,"column":28,"nodeType":"135","messageId":"136","endLine":36,"endColumn":46},{"ruleId":"133","severity":1,"message":"174","line":37,"column":11,"nodeType":"135","messageId":"136","endLine":37,"endColumn":22},{"ruleId":"133","severity":1,"message":"175","line":37,"column":24,"nodeType":"135","messageId":"136","endLine":37,"endColumn":38},{"ruleId":"176","severity":1,"message":"177","line":40,"column":40,"nodeType":"178","endLine":40,"endColumn":42,"suggestions":"179"},{"ruleId":"133","severity":1,"message":"169","line":2,"column":10,"nodeType":"135","messageId":"136","endLine":2,"endColumn":16},{"ruleId":"133","severity":1,"message":"180","line":1,"column":26,"nodeType":"135","messageId":"136","endLine":1,"endColumn":35},{"ruleId":"181","severity":1,"message":"182","line":40,"column":17,"nodeType":"135","messageId":"183","endLine":40,"endColumn":18},{"ruleId":"133","severity":1,"message":"184","line":2,"column":8,"nodeType":"135","messageId":"136","endLine":2,"endColumn":11},{"ruleId":"133","severity":1,"message":"185","line":3,"column":8,"nodeType":"135","messageId":"136","endLine":3,"endColumn":13},{"ruleId":"133","severity":1,"message":"186","line":4,"column":8,"nodeType":"135","messageId":"136","endLine":4,"endColumn":18},{"ruleId":"133","severity":1,"message":"187","line":5,"column":8,"nodeType":"135","messageId":"136","endLine":5,"endColumn":22},{"ruleId":"133","severity":1,"message":"188","line":6,"column":8,"nodeType":"135","messageId":"136","endLine":6,"endColumn":19},{"ruleId":"133","severity":1,"message":"189","line":7,"column":8,"nodeType":"135","messageId":"136","endLine":7,"endColumn":17},{"ruleId":"133","severity":1,"message":"190","line":8,"column":8,"nodeType":"135","messageId":"136","endLine":8,"endColumn":18},{"ruleId":"133","severity":1,"message":"191","line":9,"column":9,"nodeType":"135","messageId":"136","endLine":9,"endColumn":22},{"ruleId":"133","severity":1,"message":"192","line":12,"column":10,"nodeType":"135","messageId":"136","endLine":12,"endColumn":18},{"ruleId":"133","severity":1,"message":"193","line":13,"column":10,"nodeType":"135","messageId":"136","endLine":13,"endColumn":17},{"ruleId":"133","severity":1,"message":"194","line":18,"column":12,"nodeType":"135","messageId":"136","endLine":18,"endColumn":22},{"ruleId":"133","severity":1,"message":"195","line":23,"column":12,"nodeType":"135","messageId":"136","endLine":23,"endColumn":23},{"ruleId":"133","severity":1,"message":"196","line":24,"column":12,"nodeType":"135","messageId":"136","endLine":24,"endColumn":16},{"ruleId":"133","severity":1,"message":"197","line":27,"column":11,"nodeType":"135","messageId":"136","endLine":27,"endColumn":23},{"ruleId":"143","severity":1,"message":"144","line":30,"column":28,"nodeType":"145","messageId":"146","endLine":30,"endColumn":30},{"ruleId":"133","severity":1,"message":"198","line":81,"column":11,"nodeType":"135","messageId":"136","endLine":81,"endColumn":19},{"ruleId":"133","severity":1,"message":"199","line":8,"column":9,"nodeType":"135","messageId":"136","endLine":8,"endColumn":15},{"ruleId":"133","severity":1,"message":"200","line":8,"column":33,"nodeType":"135","messageId":"136","endLine":8,"endColumn":44},"no-native-reassign",["201"],"no-negated-in-lhs",["202"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'RecentInfoStack' is defined but never used.","'CompanyPageCard' is defined but never used.","'SimilarCompanyStack' is defined but never used.","'SpecificInfoStack' is defined but never used.","'BusinessPage' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'SearchBar' is defined but never used.","'LinkTab' is defined but never used.","'value' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'company' is assigned a value but never used.","'setCompany' is assigned a value but never used.","'getCompanyInfo' is assigned a value but never used.","'show' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","noTargetBlank",{"range":"203","text":"204"},{"range":"205","text":"204"},{"range":"206","text":"204"},{"range":"207","text":"204"},"'Divider' is defined but never used.","'useTheme' is defined but never used.","'Grid' is defined but never used.","'CompanyCard' is defined but never used.","'Paper' is defined but never used.","'styled' is defined but never used.","'checkID' is defined but never used.","Expected '===' and instead saw '=='.","'companyInfo' is assigned a value but never used.","'setSelectedCompany' is assigned a value but never used.","'companyData' is assigned a value but never used.","'setCompanyData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCompanyInfo'. Either include it or remove the dependency array.","ArrayExpression",["208"],"'useEffect' is defined but never used.","no-redeclare","'k' is already defined.","redeclared","'Box' is defined but never used.","'Input' is defined but never used.","'InputLabel' is defined but never used.","'InputAdornment' is defined but never used.","'FormControl' is defined but never used.","'TextField' is defined but never used.","'SearchIcon' is defined but never used.","'OutlinedInput' is defined but never used.","'IoSearch' is defined but never used.","'IoClose' is defined but never used.","'cloneBinfo' is assigned a value but never used.","'wordEntered' is assigned a value but never used.","'flag' is assigned a value but never used.","'handleFilter' is assigned a value but never used.","'onsubmit' is assigned a value but never used.","'Button' is defined but never used.","'CardActions' is defined but never used.","no-global-assign","no-unsafe-negation",[5121,5121]," rel=\"noreferrer\"",[5395,5395],[5674,5674],[5944,5944],{"desc":"209","fix":"210"},"Update the dependencies array to be: [getCompanyInfo]",{"range":"211","text":"212"},[1188,1190],"[getCompanyInfo]"]