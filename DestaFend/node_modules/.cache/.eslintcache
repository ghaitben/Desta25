[{"/home/ghait/Desktop/Desta25/DestaFend/src/index.js":"1","/home/ghait/Desktop/Desta25/DestaFend/src/reportWebVitals.js":"2","/home/ghait/Desktop/Desta25/DestaFend/src/MainApp.js":"3","/home/ghait/Desktop/Desta25/DestaFend/src/components/App.js":"4","/home/ghait/Desktop/Desta25/DestaFend/src/components/Tile.js":"5","/home/ghait/Desktop/Desta25/DestaFend/src/components/LandingPage.js":"6","/home/ghait/Desktop/Desta25/DestaFend/src/components/NavBar.js":"7","/home/ghait/Desktop/Desta25/DestaFend/src/components/BusinessPage.js":"8"},{"size":512,"mtime":1631994462517,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1631994462517,"results":"11","hashOfConfig":"10"},{"size":689,"mtime":1632060326908,"results":"12","hashOfConfig":"10"},{"size":11189,"mtime":1632067856243,"results":"13","hashOfConfig":"10"},{"size":1222,"mtime":1632018434623,"results":"14","hashOfConfig":"10"},{"size":5004,"mtime":1632067750748,"results":"15","hashOfConfig":"10"},{"size":295,"mtime":1631996001197,"results":"16","hashOfConfig":"10"},{"size":3170,"mtime":1632067752916,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1axee0i",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":4,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},"/home/ghait/Desktop/Desta25/DestaFend/src/index.js",[],["38","39"],"/home/ghait/Desktop/Desta25/DestaFend/src/reportWebVitals.js",[],"/home/ghait/Desktop/Desta25/DestaFend/src/MainApp.js",[],"/home/ghait/Desktop/Desta25/DestaFend/src/components/App.js",["40","41"],"import React, {useState, useEffect} from \"react\";\nimport axios from \"axios\";\nimport '../index.css';\nimport './SearchBar.css'\nimport NavBar from './NavBar.js'\n\n\nfunction App() {\n  const [values,setValues] = useState({\n    businessName: \"\",\n    businessOwnerName: \"\",\n    description: \"\",\n    address: \"\",\n    publicContact: \"\",\n    businessContact: \"\",\n    image: './default_img.jpeg',\n    tags: \"\",\n  });\n\n  function send(){\n    let industry_clone = [...industry];\n    let neighbourhood_clone = [...neighbourhood];\n    \n    for(var i = 0; i < industry_clone.length; i++) {\n      industry_clone[i] = JSON.stringify(industry_clone[i]);\n    }\n    for(var j = 0; j < neighbourhood_clone.length; j++) {\n      neighbourhood_clone[j] = JSON.stringify(neighbourhood_clone[j]);\n    }\n\n    var formData = new FormData();\n    Object.keys(values).forEach((key) => {\n      formData.append(key, values[key]);\n    })\n    formData.append(\"industrySize\", industry_clone.length);\n    formData.append(\"neighbourhoodSize\", neighbourhood_clone.length);\n\n    for(var k = 0; k < industry_clone.length; k++) {\n      formData.append(\"industry\"+k, industry_clone[k]);\n    }\n    for(var k = 0; k < neighbourhood_clone.length; k++) {\n      formData.append(\"neighbourhood\"+k, neighbourhood_clone[k]);\n    }\n    \n    axios.post('http://localhost:3003/url/saveProfile', formData, {\n      headers: {\n        \"content-Type\": 'multipart/form-data'\n      }\n    })\n\n    .then((response) => {\n      console.log(response);\n    }, (error) => {\n      console.log(error);\n    });\n  }\n\n  const[submitted, setSubmitted] = useState(false);\n  const[valid,setValid] = useState(false);\n\n  const handleBusinessNameInputChange = (event) => {\n    setValues({...values, businessName: event.target.value})\n  }\n  const handleOwnerNameInputChange = (event) => {\n    setValues({...values, businessOwnerName: event.target.value})\n  }\n  const handleDescriptionInputChange = (event) => {\n    setValues({...values, description: event.target.value})\n  }\n  const handleAddressInputChange = (event) => {\n    setValues({...values, address: event.target.value})\n  }\n  const handlePublicContactInputChange = (event) => {\n    setValues({...values, publicContact: event.target.value})\n  }\n  const handleBusinessContactInputChange = (event) => {\n    setValues({...values, businessContact: event.target.value})\n  }\n  const handleImageChange = (event) => {\n    setValues({...values,image: event.target.files[0]})\n  }\n  const handleTagsChange = (event) => {\n    setValues({...values,tags: event.target.value})\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if(values.businessOwnerName && values.businessName && values.businessContact){\n      send();\n      setValid(true);\n      window.location.href = '/';\n      \n    }\n    setSubmitted(true);\n    \n  }\n\n\n    //the tags array should be filled with all the tags that we have\n    const [industry,setindustryFlag] = useState([\n      {\n        name: \"food\",\n        flag: false\n      },\n      {\n        name: \"accomodation\",\n        flag: false\n      },\n      {\n        name: \"arts\",\n        flag: false\n      },\n      {\n        name: \"entertainment\",\n        flag: false\n      },\n      {\n        name: \"recreation\",\n        flag: false\n      },\n      {\n        name: \"construction\",\n        flag: false\n      },\n      {\n        name: \"education\",\n        flag: false\n      },\n      {\n        name: \"healthcare\",\n        flag: false\n      },\n      {\n        name: \"manufacturing\",\n        flag: false\n      },\n      {\n        name: \"real estate\",\n        flag: false\n      },\n      {\n        name: \"retail\",\n        flag: false\n      },\n      {\n        name: \"wholesale\",\n        flag: false\n      },\n      {\n        name: \"clothing\",\n        flag: false\n      }\n    ]);\n\n    const [neighbourhood,setneighbourhoodFlag] = useState([\n      {\n        name: \"downtown\",\n        flag: false\n      },\n      {\n        name: \"old montreal\",\n        flag: false\n      },\n      {\n        name: \"plateau and mile end\",\n        flag: false\n      },\n      {\n        name: \"the village\",\n        flag: false\n      },\n      {\n        name: \"mont royal and outrement\",\n        flag: false\n      },\n      {\n        name: \"hochelaga-maisonneuve\",\n        flag: false\n      },\n      {\n        name: \"little italy and villeray\",\n        flag: false\n      },\n      {\n        name: \"les quartiers du canal\",\n        flag: false\n      },\n      {\n        name: \"west island\",\n        flag: false\n      },\n      {\n        name: \"pole des rapides\",\n        flag: false\n      }\n    ]);\n    \n   // const [checkedIndustryState, setIndustryCheckedState] = useState(\n    //  new Array(industry.length).fill(false)\n   // );\n\n   // const [checkedNeighbourhoodState, setNeighbourhoodCheckedState] = useState(\n     // new Array(neighbourhood.length).fill(false)\n    //);\n\n    //const handleIndustryOnChange = (position) => {\n     // const updatedIndustryCheckedState = checkedIndustryState.map((item, index) =>\n       // index === position ? !item : item\n      //);\n\n      //setIndustryCheckedState(updatedIndustryCheckedState);\n     // industry[position].flag = !industry[position].flag\n    //}\n\n   // const handleNeighbourhoodOnChange = (position) => {\n     // const updatedNeighbourhoodCheckedState = checkedNeighbourhoodState.map((item, index) =>\n      //  index === position ? !item : item\n     // );\n\n      //setNeighbourhoodCheckedState(updatedNeighbourhoodCheckedState);\n      //neighbourhood[position].flag = !neighbourhood[position].flag\n    //}\n\n  return (\n    <>\n    <NavBar />  \n    <div class=\"form-container\">\n          <form className=\"register-form\" onSubmit={handleSubmit} encType=\"multipart/form-data\">\n            {submitted && valid ? <div className=\"success-message\">Success! Thank you for registering</div> : null}\n            <input\n              onChange={handleBusinessNameInputChange}\n              value={values.businessName}\n              className=\"form-field\"\n              type=\"text\"\n              placeholder=\"Business Name\"\n            />\n            {submitted && !values.businessName ? <span id=\"business-name-error\">Please enter a business name</span> : null}\n            <input\n              onChange={handleOwnerNameInputChange}\n              value={values.businessOwnerName}\n              className=\"form-field\"\n              type=\"text\"\n              placeholder=\"Owner Name\"\n            />\n            {submitted && !values.businessOwnerName ? <span id=\"owner-name-error\">Please enter a owner name</span> : null}\n            <input\n              onChange={handleBusinessContactInputChange}\n              value={values.businessContact}\n              className=\"form-field\"\n              type=\"text\"\n              placeholder=\"Private Contact\"\n            />\n            {submitted && !values.businessContact ? <span id=\"contact-error\">Please provide contact information.</span> : null}\n            <input\n              onChange={handleDescriptionInputChange}\n              value={values.description}\n              class=\"form-field\"\n              type=\"text\"\n              placeholder=\"Description\"\n            />\n            <input\n              onChange={handleAddressInputChange}\n              value={values.address}\n              class=\"form-field\"\n              type=\"text\"\n              placeholder=\"Address\"\n            />\n            <input\n              onChange={handlePublicContactInputChange}\n              value={values.publicContact}\n              class=\"form-field\"\n              type=\"text\"\n              placeholder=\"Public Contact\"\n            />\n            <label for=\"image-upload\">Upload a background image:</label>\n            <input\n              accept=\"image/*\"\n              onChange={handleImageChange}\n              class=\"form-field\"\n              id=\"image-upload\"\n              type=\"file\"\n              placeholder=\"Insert an image\"\n            />\n            <input\n              onChange={handleTagsChange}\n              value={values.tags}\n              class=\"form-field\"\n              type=\"text\"\n              placeholder=\"Enter some tags separated by commas\"\n            />\n            <h3>Select Industry</h3>\n                  <ul className=\"industry-list\">\n                    {industry.map(({ name },index) => {\n                      return (\n                        <li key={index}>\n                          <div className=\"indsutry-list-item\">\n                            <div className=\"left-section\">\n                              <input\n                                type=\"checkbox\"\n                                id={`custom-checkbox-${index}`}\n                                name={name}\n                                value={name}\n                                //checked={checkedIndustryState[index]}\n                                //onChange={() => handleIndustryOnChange(index)}\n                                onChange={(e) => {\n                                  let val = e.target.checked;\n                                  setindustryFlag(industry.map(cbox => {\n                                    if(cbox.name === e.target.name) { cbox.flag = val }\n                                    return cbox;\n                                  }))\n                                }}\n                              />\n                              <label htmlFor={`custom-checkbox-${index}`}>{name}</label>\n                            </div>\n                          </div>\n                        </li>\n                      );\n                    })}\n                  </ul>\n                  <h3>Select neighbourhood</h3>\n                  <ul className=\"industry-list\">\n                    {neighbourhood.map(({ name },index) => {\n                      return (\n                        <li key={index+industry.length}>\n                          <div className=\"industry-list-item\">\n                            <div className=\"left-section\">\n                              <input\n                                type=\"checkbox\"\n                                id={`custom-checkbox-${index + industry.length}`}\n                                name={name}\n                                value={name}\n                                //checked={checkedNeighbourhoodState[index]}\n                                //onChange={() => handleNeighbourhoodOnChange(index)}\n                                onChange={e => {\n                                  let val = e.target.checked;\n                                  setneighbourhoodFlag(neighbourhood.map(n => {\n                                    if(n.name === e.target.name) { n.flag = val }\n                                    return n;\n                                  }))\n                                }}\n                              />\n                              <label htmlFor={`custom-checkbox-${index+industry.length}`}>{name}</label>\n                            </div>\n                          </div>\n                        </li>\n                      );\n                    })}\n                  </ul>\n            <button class=\"form-field\" type=\"submit\">\n              Register\n            </button>\n          </form>\n    </div>\n    </>\n  )\n}\n\n\nexport default App;\n","/home/ghait/Desktop/Desta25/DestaFend/src/components/Tile.js",[],"/home/ghait/Desktop/Desta25/DestaFend/src/components/LandingPage.js",["42","43","44","45","46"],"import React, {useState, useEffect} from 'react'\nimport Tile from \"./Tile\";\nimport NavBar from './NavBar';\nimport axios from \"axios\";\nimport './LandingPage.css'\nimport \"./SearchBar.css\";\nimport { IoSearch } from \"react-icons/io5\"\nimport { IoClose } from \"react-icons/io5\";\n\n\n\nfunction LandingPage() {\n  \n  const [binfo, setBinfoState] = useState([]);\n  const [cloneBinfo, setCloneBinfo] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [filteredDataIndustry, setFilteredDataIndustry] = useState([]);\n  const [filteredDataNeighbourhood, setFilteredDataNeighbourhood] = useState([]);\n  const [filteredDataTags, setFilteredDataTags] = useState([]);\n  const [wordEntered, setWordEntered] = useState(\"\");\n  const [flag, setFlag] = useState(true);\n\n\n  const handleFilter = (event) => {\n    const searchWord = event.target.value;\n    \n    if(searchWord.length != 0){\n      setFlag(false);\n    }else{\n      setFlag(true);\n      clearInput();\n    }\n\n    setWordEntered(searchWord);\n\n    const newFilter = binfo.filter((value) => {\n        return value.businessName.toLowerCase().includes(searchWord.toLowerCase());\n    }\n    );\n    const newIndustryFilter = binfo.filter((value) => {\n      return value.industries.some((e => e.toLowerCase().includes(searchWord.toLowerCase())));\n      \n    }\n    );\n    const newNeighbourhoodFilter = binfo.filter((value) => {\n      return value.neighbourhoods.some((e => e.toLowerCase().includes(searchWord.toLowerCase())));\n    }\n    );\n    const newTagsFilter = binfo.filter((value) => {\n      return value.tags.some((e => e.toLowerCase().includes(searchWord.toLowerCase())));\n    }\n    );\n\n    if (searchWord === \"\") {\n      setFilteredData([]);\n      setFilteredDataIndustry([]);\n      setFilteredDataNeighbourhood([]);\n      setFilteredDataTags([]);\n    } else {\n      \n      setFilteredData(newFilter);\n      setFilteredDataIndustry(newIndustryFilter);\n      setFilteredDataNeighbourhood(newNeighbourhoodFilter);\n      setFilteredDataTags(newTagsFilter);\n    }\n  };\n\n  const clearInput = () => {\n    setFilteredData([]);\n    setFilteredDataIndustry([]);\n    setFilteredDataNeighbourhood([]);\n    setFilteredDataTags([]);\n    setCloneBinfo(binfo);\n    setWordEntered(\"\");\n    setFlag(true)\n  };\n\n  const onsubmit = (event) => {\n    event.preventDefault();\n    var masterList = filteredData.concat(filteredDataIndustry,filteredDataNeighbourhood,filteredDataTags);\n    setCloneBinfo(masterList);\n    /* instead of logging, we can output every business in this list as tiles on the users screen */\n    console.log(masterList);\n    \n  }\n    function getData() {\n        axios.get(\"http://localhost:3003/getdata\") //need to add the params later\n        .then( res =>{ setBinfoState(res.data); setCloneBinfo(res.data); })\n        .catch( err => console.log(err))\n    }\n\n    useEffect(() => {\n        getData();\n    }, [])\n    return(\n        <>\n        <div className=\"lastContainer\">\n        <NavBar />\n            <div className=\"search\">\n        <div className=\"searchInputs\">\n            <form onSubmit={onsubmit}>\n            <input\n            type=\"text\"\n            placeholder=\"Find a business\"\n            value={wordEntered}\n            onChange={handleFilter}\n            />\n            </form>\n            <div className=\"searchIcon\">\n            {flag ? (\n                <IoSearch />\n            ) : (\n                <IoClose id=\"clearBtn\" onClick={clearInput} />\n            )}\n            </div>\n        </div>\n        {(\n            <div className=\"dataResult\">\n            {filteredData.slice(0, 15).map((value, key) => {\n                return (\n                <a className=\"dataItem\" href={value.link} target=\"_blank\">\n                    <p>{value.businessName} </p>\n                </a>\n                );\n            })}\n            {filteredDataIndustry.slice(0, 15).map((value, key) => {\n                return (\n                <a className=\"dataItem\" href={value.link} target=\"_blank\">\n                    <p>{value.businessName} </p>\n                </a>\n                );\n            })}\n            {filteredDataNeighbourhood.slice(0, 15).map((value, key) => {\n                return (\n                <a className=\"dataItem\" href={value.link} target=\"_blank\">\n                    <p>{value.businessName} </p>\n                </a>\n                );\n            })}\n            {filteredDataTags.slice(0, 15).map((value, key) => {\n                return (\n                <a className=\"dataItem\" href={value.link} target=\"_blank\">\n                    <p>{value.businessName} </p>\n                </a>\n                );\n            })}\n            </div>\n        )}\n        </div>\n        </div>\n        <div className=\"container2\">\n            {cloneBinfo.map(bis => <a href={\"/getuser/\"+bis._id}> <Tile key={bis._id} name={bis.businessName} \n            description={bis.description} image={bis.image} visible=\"green\" /> </a> )}            \n        </div>\n        \n        </>\n    );\n}\nexport default LandingPage;","/home/ghait/Desktop/Desta25/DestaFend/src/components/NavBar.js",[],"/home/ghait/Desktop/Desta25/DestaFend/src/components/BusinessPage.js",["47"],"import axios from 'axios';\nimport './BusinessPage.css'\nimport NavBar from './NavBar';\nimport React, {useState, useEffect} from 'react'\n\nfunction BusinessPage({props}) {\n    \n    let _id = props.match.params.id; \n    const [binfo, setBState] = useState([])\n    const [tags, setTags] = useState([])\n    const [neighbourhoods, setNeighbourhoods] = useState([])\n    const [industry, setIndustry] = useState([])\n    \n    async function fetchUser() {\n        await axios.get(\"http://localhost:3003/getuser\", {\n            params: {\n                _id:_id\n            }\n        })\n        .then( res => {\n            setBState(res.data);\n            setTags(res.data.tags);\n            setNeighbourhoods(res.data.neighbourhoods);\n            setIndustry(res.data.industries);\n        })\n        .catch(err => console.log(err))\n    }\n    useEffect(() => {\n        fetchUser();\n    }, [])\n    \n    return(\n        <>\n            <NavBar />\n            <div className=\"container3\">\n                <div className=\"bgpicture\">\n                    <img src={\"data:image;base64,\"+ binfo.image} alt=\"bpic\" className=\"picture\" />\n                </div>\n                <div className=\"Bname white\">\n                    {binfo.businessName}\n                    \n                </div>\n                <div className=\"overview white\">\n                    {binfo.description} jsqlmkqjdsmlkjsmldfkjlkdjsfmlqksjdmlfkqjsdlfkjsqdklf{binfo.description} jsqlmkqjdsmlkjsmldfkjlkdjsfmlqksjdmlfkqjsdlfkjsqdklf{binfo.description} jsqlmkqjdsmlkjsmldfkjlkdjsfmlqksjdmlfkqjsdlfkjsqdklf{binfo.description} jsqlmkqjdsmlkjsmldfkjlkdjsfmlqksjdmlfkqjsdlfkjsqdklf{binfo.description} jsqlmkqjdsmlkjsmldfkjlkdjsfmlqksjdmlfkqjsdlfkjsqdklf{binfo.description} jsqlmkqjdsmlkjsmldfkjlkdjsfmlqksjdmlfkqjsdlfkjsqdklf{binfo.description} jsqlmkqjdsmlkjsmldfkjlkdjsfmlqksjdmlfkqjsdlfkjsqdklf{binfo.description} jsqlmkqjdsmlkjsmldfkjlkdjsfmlqksjdmlfkqjsdlfkjsqdklf{binfo.description} jsqlmkqjdsmlkjsmldfkjlkdjsfmlqksjdmlfkqjsdlfkjsqdklf{binfo.description} jsqlmkqjdsmlkjsmldfkjlkdjsfmlqksjdmlfkqjsdlfkjsqdklf{binfo.description} jsqlmkqjdsmlkjsmldfkjlkdjsfmlqksjdmlfkqjsdlfkjsqdklf{binfo.description} jsqlmkqjdsmlkjsmldfkjlkdjsfmlqksjdmlfkqjsdlfkjsqdklf{binfo.description} jsqlmkqjdsmlkjsmldfkjlkdjsfmlqksjdmlfkqjsdlfkjsqdklf{binfo.description} jsqlmkqjdsmlkjsmldfkjlkdjsfmlqksjdmlfkqjsdlfkjsqdklf{binfo.description} jsqlmkqjdsmlkjsmldfkjlkdjsfmlqksjdmlfkqjsdlfkjsqdklf{binfo.description} jsqlmkqjdsmlkjsmldfkjlkdjsfmlqksjdmlfkqjsdlfkjsqdklf\n                </div>\n                <div className=\"address white\">\n                    {binfo.address}\n                </div>\n                <div className=\"tags white\">\n                    {neighbourhoods.map(neigh => <div className=\"Box blue\">{neigh}</div>  )}\n                </div>\n                <div className=\"tags white\">\n                    {tags.map(tag => <div className=\"Box green\">#{tag}</div>  )}\n                </div>\n                <div className=\"tags white\">\n                    {industry.map(ind => <div className=\"Box violet\">#{ind}</div> )}\n                </div>\n                \n            </div>\n        </>\n    );\n}\nexport default BusinessPage;",{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":1,"column":26,"nodeType":"54","messageId":"55","endLine":1,"endColumn":35},{"ruleId":"56","severity":1,"message":"57","line":41,"column":13,"nodeType":"54","messageId":"58","endLine":41,"endColumn":14},{"ruleId":"59","severity":1,"message":"60","line":27,"column":26,"nodeType":"61","messageId":"62","endLine":27,"endColumn":28},{"ruleId":"63","severity":1,"message":"64","line":121,"column":17,"nodeType":"65","messageId":"66","endLine":121,"endColumn":75,"fix":"67"},{"ruleId":"63","severity":1,"message":"64","line":128,"column":17,"nodeType":"65","messageId":"66","endLine":128,"endColumn":75,"fix":"68"},{"ruleId":"63","severity":1,"message":"64","line":135,"column":17,"nodeType":"65","messageId":"66","endLine":135,"endColumn":75,"fix":"69"},{"ruleId":"63","severity":1,"message":"64","line":142,"column":17,"nodeType":"65","messageId":"66","endLine":142,"endColumn":75,"fix":"70"},{"ruleId":"71","severity":1,"message":"72","line":30,"column":8,"nodeType":"73","endLine":30,"endColumn":10,"suggestions":"74"},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-redeclare","'k' is already defined.","redeclared","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","noTargetBlank",{"range":"77","text":"78"},{"range":"79","text":"78"},{"range":"80","text":"78"},{"range":"81","text":"78"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchUser'. Either include it or remove the dependency array.","ArrayExpression",["82"],"no-global-assign","no-unsafe-negation",[3695,3695]," rel=\"noreferrer\"",[3969,3969],[4248,4248],[4518,4518],{"desc":"83","fix":"84"},"Update the dependencies array to be: [fetchUser]",{"range":"85","text":"86"},[877,879],"[fetchUser]"]