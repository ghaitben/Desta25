{"ast":null,"code":"var _jsxFileName = \"/home/ghait/Desktop/Desta25/DestaFend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport './index.css';\nimport './components/SearchBar.js';\nimport SearchBar from './components/SearchBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [values, setValues] = useState({\n    businessName: \"\",\n    businessOwnerName: \"\",\n    description: \"\",\n    address: \"\",\n    publictContact: \"\",\n    businessContact: \"\",\n    image: './default_img.jpeg',\n    tags: \"\"\n  });\n\n  function send() {\n    for (var i = 0; i < industry.length; i++) {\n      industry[i] = JSON.stringify(industry[i]);\n    }\n\n    neighbourhood.forEach(e => e = JSON.stringify(e));\n    var formData = new FormData();\n    Object.keys(values).forEach(key => {\n      formData.append(key, values[key]);\n    });\n    formData.append(\"industry\", industry);\n    formData.append(\"neighborhood\", neighbourhood);\n    axios.post('http://localhost:3003/url/saveProfile', formData, {\n      headers: {\n        \"content-Type\": 'multipart/form-data'\n      }\n    }).then(response => {\n      console.log(response);\n    }, error => {\n      console.log(error);\n    });\n  }\n\n  const [submitted, setSubmitted] = useState(false);\n  const [valid, setValid] = useState(false);\n\n  const handleBusinessNameInputChange = event => {\n    setValues({ ...values,\n      businessName: event.target.value\n    });\n  };\n\n  const handleOwnerNameInputChange = event => {\n    setValues({ ...values,\n      businessOwnerName: event.target.value\n    });\n  };\n\n  const handleDescriptionInputChange = event => {\n    setValues({ ...values,\n      description: event.target.value\n    });\n  };\n\n  const handleAddressInputChange = event => {\n    setValues({ ...values,\n      address: event.target.value\n    });\n  };\n\n  const handlePublicContactInputChange = event => {\n    setValues({ ...values,\n      publicContact: event.target.value\n    });\n  };\n\n  const handleBusinessContactInputChange = event => {\n    setValues({ ...values,\n      businessContact: event.target.value\n    });\n  };\n\n  const handleImageChange = event => {\n    setValues({ ...values,\n      image: event.target.files[0]\n    });\n  };\n\n  const handleTagsChange = event => {\n    setValues({ ...values,\n      tags: event.target.value\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (values.businessOwnerName && values.businessName && values.businessContact) {\n      setValid(true);\n    }\n\n    setSubmitted(true);\n    send();\n  }; //the tags array should be filled with all the tags that we have\n\n\n  const [industry, setindustryFlag] = useState([{\n    name: \"food\",\n    flag: false\n  }, {\n    name: \"accomodation\",\n    flag: false\n  }, {\n    name: \"arts\",\n    flag: false\n  }, {\n    name: \"entertainment\",\n    flag: false\n  }, {\n    name: \"recreation\",\n    flag: false\n  }, {\n    name: \"construction\",\n    flag: false\n  }, {\n    name: \"education\",\n    flag: false\n  }, {\n    name: \"healthcare\",\n    flag: false\n  }, {\n    name: \"manufacturing\",\n    flag: false\n  }, {\n    name: \"real estate\",\n    flag: false\n  }, {\n    name: \"retail\",\n    flag: false\n  }, {\n    name: \"wholesale\",\n    flag: false\n  }, {\n    name: \"clothing\",\n    flag: false\n  }]);\n  const [neighbourhood, setneighbourhoodFlag] = useState([{\n    name: \"downtown\",\n    flag: false\n  }, {\n    name: \"old montreal\",\n    flag: false\n  }, {\n    name: \"plateau and mile end\",\n    flag: false\n  }, {\n    name: \"the village\",\n    flag: false\n  }, {\n    name: \"mont royal and outrement\",\n    flag: false\n  }, {\n    name: \"hochelaga-maisonneuve\",\n    flag: false\n  }, {\n    name: \"little italy and villeray\",\n    flag: false\n  }, {\n    name: \"les quartiers du canal\",\n    flag: false\n  }, {\n    name: \"west island\",\n    flag: false\n  }, {\n    name: \"pole des rapides\",\n    flag: false\n  }]); // const [checkedIndustryState, setIndustryCheckedState] = useState(\n  //  new Array(industry.length).fill(false)\n  // );\n  // const [checkedNeighbourhoodState, setNeighbourhoodCheckedState] = useState(\n  // new Array(neighbourhood.length).fill(false)\n  //);\n  //const handleIndustryOnChange = (position) => {\n  // const updatedIndustryCheckedState = checkedIndustryState.map((item, index) =>\n  // index === position ? !item : item\n  //);\n  //setIndustryCheckedState(updatedIndustryCheckedState);\n  // industry[position].flag = !industry[position].flag\n  //}\n  // const handleNeighbourhoodOnChange = (position) => {\n  // const updatedNeighbourhoodCheckedState = checkedNeighbourhoodState.map((item, index) =>\n  //  index === position ? !item : item\n  // );\n  //setNeighbourhoodCheckedState(updatedNeighbourhoodCheckedState);\n  //neighbourhood[position].flag = !neighbourhood[position].flag\n  //}\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"form-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"register-form\",\n      onSubmit: handleSubmit,\n      encType: \"multipart/form-data\",\n      children: [submitted && valid ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-message\",\n        children: \"Success! Thank you for registering\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 35\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleBusinessNameInputChange,\n        value: values.businessName,\n        className: \"form-field\",\n        type: \"text\",\n        placeholder: \"Business Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 13\n      }, this), submitted && !values.businessName ? /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"business-name-error\",\n        children: \"Please enter a business name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 50\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleOwnerNameInputChange,\n        value: values.businessOwnerName,\n        className: \"form-field\",\n        type: \"text\",\n        placeholder: \"Owner Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 13\n      }, this), submitted && !values.businessOwnerName ? /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"owner-name-error\",\n        children: \"Please enter a owner name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 55\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleBusinessContactInputChange,\n        value: values.businessContact,\n        className: \"form-field\",\n        type: \"text\",\n        placeholder: \"Private Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 13\n      }, this), submitted && !values.businessContact ? /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"contact-error\",\n        children: \"Please provide contact information.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 53\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleDescriptionInputChange,\n        value: values.description,\n        class: \"form-field\",\n        type: \"text\",\n        placeholder: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleAddressInputChange,\n        value: values.address,\n        class: \"form-field\",\n        type: \"text\",\n        placeholder: \"Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handlePublicContactInputChange,\n        value: values.publicContact,\n        class: \"form-field\",\n        type: \"text\",\n        placeholder: \"Public Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"image-upload\",\n        children: \"Upload a background image:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        accept: \"image/*\",\n        onChange: handleImageChange,\n        class: \"form-field\",\n        id: \"image-upload\",\n        type: \"file\",\n        placeholder: \"Insert an image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleTagsChange,\n        value: values.tags,\n        class: \"form-field\",\n        type: \"text\",\n        placeholder: \"Enter some tags separated by commas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Select Industry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"industry-list\",\n        children: industry.map(({\n          name\n        }, index) => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"indsutry-list-item\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"left-section\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  id: `custom-checkbox-${index}`,\n                  name: name,\n                  value: name //checked={checkedIndustryState[index]}\n                  //onChange={() => handleIndustryOnChange(index)}\n                  ,\n                  onChange: e => {\n                    let val = e.target.checked;\n                    setindustryFlag(industry.map(cbox => {\n                      if (cbox.name === e.target.name) {\n                        cbox.flag = val;\n                      }\n\n                      return cbox;\n                    }));\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 31\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: `custom-checkbox-${index}`,\n                  children: name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 31\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 27\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Select neighbourhood\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"industry-list\",\n        children: neighbourhood.map(({\n          name\n        }, index) => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"industry-list-item\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"left-section\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  id: `custom-checkbox-${index + industry.length}`,\n                  name: name,\n                  value: name //checked={checkedNeighbourhoodState[index]}\n                  //onChange={() => handleNeighbourhoodOnChange(index)}\n                  ,\n                  onChange: e => {\n                    let val = e.target.checked;\n                    setneighbourhoodFlag(neighbourhood.map(n => {\n                      if (n.name === e.target.name) {\n                        n.flag = val;\n                      }\n\n                      return n;\n                    }));\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 308,\n                  columnNumber: 31\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: `custom-checkbox-${index + industry.length}`,\n                  children: name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 323,\n                  columnNumber: 31\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 27\n            }, this)\n          }, index + industry.length, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"form-field\",\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"j24Eli+fp3m66TqaZQe9jUtGHvA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/ghait/Desktop/Desta25/DestaFend/src/App.js"],"names":["React","useState","useEffect","axios","SearchBar","App","values","setValues","businessName","businessOwnerName","description","address","publictContact","businessContact","image","tags","send","i","industry","length","JSON","stringify","neighbourhood","forEach","e","formData","FormData","Object","keys","key","append","post","headers","then","response","console","log","error","submitted","setSubmitted","valid","setValid","handleBusinessNameInputChange","event","target","value","handleOwnerNameInputChange","handleDescriptionInputChange","handleAddressInputChange","handlePublicContactInputChange","publicContact","handleBusinessContactInputChange","handleImageChange","files","handleTagsChange","handleSubmit","preventDefault","setindustryFlag","name","flag","setneighbourhoodFlag","map","index","val","checked","cbox","n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,OAAO,2BAAP;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,MAAD,EAAQC,SAAR,IAAqBN,QAAQ,CAAC;AAClCO,IAAAA,YAAY,EAAE,EADoB;AAElCC,IAAAA,iBAAiB,EAAE,EAFe;AAGlCC,IAAAA,WAAW,EAAE,EAHqB;AAIlCC,IAAAA,OAAO,EAAE,EAJyB;AAKlCC,IAAAA,cAAc,EAAE,EALkB;AAMlCC,IAAAA,eAAe,EAAE,EANiB;AAOlCC,IAAAA,KAAK,EAAE,oBAP2B;AAQlCC,IAAAA,IAAI,EAAE;AAR4B,GAAD,CAAnC;;AAWA,WAASC,IAAT,GAAe;AACb,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGC,QAAQ,CAACC,MAA5B,EAAoCF,CAAC,EAArC,EAAyC;AACvCC,MAAAA,QAAQ,CAACD,CAAD,CAAR,GAAcG,IAAI,CAACC,SAAL,CAAeH,QAAQ,CAACD,CAAD,CAAvB,CAAd;AACD;;AACDK,IAAAA,aAAa,CAACC,OAAd,CAAsBC,CAAC,IAAIA,CAAC,GAAGJ,IAAI,CAACC,SAAL,CAAeG,CAAf,CAA/B;AACA,QAAIC,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AACAC,IAAAA,MAAM,CAACC,IAAP,CAAYtB,MAAZ,EAAoBiB,OAApB,CAA6BM,GAAD,IAAS;AACnCJ,MAAAA,QAAQ,CAACK,MAAT,CAAgBD,GAAhB,EAAqBvB,MAAM,CAACuB,GAAD,CAA3B;AACD,KAFD;AAGAJ,IAAAA,QAAQ,CAACK,MAAT,CAAgB,UAAhB,EAA4BZ,QAA5B;AACAO,IAAAA,QAAQ,CAACK,MAAT,CAAgB,cAAhB,EAAgCR,aAAhC;AACAnB,IAAAA,KAAK,CAAC4B,IAAN,CAAW,uCAAX,EAAoDN,QAApD,EAA8D;AAC5DO,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADmD,KAA9D,EAMCC,IAND,CAMOC,QAAD,IAAc;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACD,KARD,EAQIG,KAAD,IAAW;AACZF,MAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACD,KAVD;AAWD;;AAED,QAAK,CAACC,SAAD,EAAYC,YAAZ,IAA4BtC,QAAQ,CAAC,KAAD,CAAzC;AACA,QAAK,CAACuC,KAAD,EAAOC,QAAP,IAAmBxC,QAAQ,CAAC,KAAD,CAAhC;;AAEA,QAAMyC,6BAA6B,GAAIC,KAAD,IAAW;AAC/CpC,IAAAA,SAAS,CAAC,EAAC,GAAGD,MAAJ;AAAYE,MAAAA,YAAY,EAAEmC,KAAK,CAACC,MAAN,CAAaC;AAAvC,KAAD,CAAT;AACD,GAFD;;AAGA,QAAMC,0BAA0B,GAAIH,KAAD,IAAW;AAC5CpC,IAAAA,SAAS,CAAC,EAAC,GAAGD,MAAJ;AAAYG,MAAAA,iBAAiB,EAAEkC,KAAK,CAACC,MAAN,CAAaC;AAA5C,KAAD,CAAT;AACD,GAFD;;AAGA,QAAME,4BAA4B,GAAIJ,KAAD,IAAW;AAC9CpC,IAAAA,SAAS,CAAC,EAAC,GAAGD,MAAJ;AAAYI,MAAAA,WAAW,EAAEiC,KAAK,CAACC,MAAN,CAAaC;AAAtC,KAAD,CAAT;AACD,GAFD;;AAGA,QAAMG,wBAAwB,GAAIL,KAAD,IAAW;AAC1CpC,IAAAA,SAAS,CAAC,EAAC,GAAGD,MAAJ;AAAYK,MAAAA,OAAO,EAAEgC,KAAK,CAACC,MAAN,CAAaC;AAAlC,KAAD,CAAT;AACD,GAFD;;AAGA,QAAMI,8BAA8B,GAAIN,KAAD,IAAW;AAChDpC,IAAAA,SAAS,CAAC,EAAC,GAAGD,MAAJ;AAAY4C,MAAAA,aAAa,EAAEP,KAAK,CAACC,MAAN,CAAaC;AAAxC,KAAD,CAAT;AACD,GAFD;;AAGA,QAAMM,gCAAgC,GAAIR,KAAD,IAAW;AAClDpC,IAAAA,SAAS,CAAC,EAAC,GAAGD,MAAJ;AAAYO,MAAAA,eAAe,EAAE8B,KAAK,CAACC,MAAN,CAAaC;AAA1C,KAAD,CAAT;AACD,GAFD;;AAGA,QAAMO,iBAAiB,GAAIT,KAAD,IAAW;AACnCpC,IAAAA,SAAS,CAAC,EAAC,GAAGD,MAAJ;AAAWQ,MAAAA,KAAK,EAAE6B,KAAK,CAACC,MAAN,CAAaS,KAAb,CAAmB,CAAnB;AAAlB,KAAD,CAAT;AACD,GAFD;;AAGA,QAAMC,gBAAgB,GAAIX,KAAD,IAAW;AAClCpC,IAAAA,SAAS,CAAC,EAAC,GAAGD,MAAJ;AAAWS,MAAAA,IAAI,EAAE4B,KAAK,CAACC,MAAN,CAAaC;AAA9B,KAAD,CAAT;AACD,GAFD;;AAIA,QAAMU,YAAY,GAAIZ,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACa,cAAN;;AACA,QAAGlD,MAAM,CAACG,iBAAP,IAA4BH,MAAM,CAACE,YAAnC,IAAmDF,MAAM,CAACO,eAA7D,EAA6E;AAC3E4B,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;;AACDF,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAvB,IAAAA,IAAI;AACL,GAPD,CAhEa,CA0EX;;;AACA,QAAM,CAACE,QAAD,EAAUuC,eAAV,IAA6BxD,QAAQ,CAAC,CAC1C;AACEyD,IAAAA,IAAI,EAAE,MADR;AAEEC,IAAAA,IAAI,EAAE;AAFR,GAD0C,EAK1C;AACED,IAAAA,IAAI,EAAE,cADR;AAEEC,IAAAA,IAAI,EAAE;AAFR,GAL0C,EAS1C;AACED,IAAAA,IAAI,EAAE,MADR;AAEEC,IAAAA,IAAI,EAAE;AAFR,GAT0C,EAa1C;AACED,IAAAA,IAAI,EAAE,eADR;AAEEC,IAAAA,IAAI,EAAE;AAFR,GAb0C,EAiB1C;AACED,IAAAA,IAAI,EAAE,YADR;AAEEC,IAAAA,IAAI,EAAE;AAFR,GAjB0C,EAqB1C;AACED,IAAAA,IAAI,EAAE,cADR;AAEEC,IAAAA,IAAI,EAAE;AAFR,GArB0C,EAyB1C;AACED,IAAAA,IAAI,EAAE,WADR;AAEEC,IAAAA,IAAI,EAAE;AAFR,GAzB0C,EA6B1C;AACED,IAAAA,IAAI,EAAE,YADR;AAEEC,IAAAA,IAAI,EAAE;AAFR,GA7B0C,EAiC1C;AACED,IAAAA,IAAI,EAAE,eADR;AAEEC,IAAAA,IAAI,EAAE;AAFR,GAjC0C,EAqC1C;AACED,IAAAA,IAAI,EAAE,aADR;AAEEC,IAAAA,IAAI,EAAE;AAFR,GArC0C,EAyC1C;AACED,IAAAA,IAAI,EAAE,QADR;AAEEC,IAAAA,IAAI,EAAE;AAFR,GAzC0C,EA6C1C;AACED,IAAAA,IAAI,EAAE,WADR;AAEEC,IAAAA,IAAI,EAAE;AAFR,GA7C0C,EAiD1C;AACED,IAAAA,IAAI,EAAE,UADR;AAEEC,IAAAA,IAAI,EAAE;AAFR,GAjD0C,CAAD,CAA3C;AAuDA,QAAM,CAACrC,aAAD,EAAesC,oBAAf,IAAuC3D,QAAQ,CAAC,CACpD;AACEyD,IAAAA,IAAI,EAAE,UADR;AAEEC,IAAAA,IAAI,EAAE;AAFR,GADoD,EAKpD;AACED,IAAAA,IAAI,EAAE,cADR;AAEEC,IAAAA,IAAI,EAAE;AAFR,GALoD,EASpD;AACED,IAAAA,IAAI,EAAE,sBADR;AAEEC,IAAAA,IAAI,EAAE;AAFR,GAToD,EAapD;AACED,IAAAA,IAAI,EAAE,aADR;AAEEC,IAAAA,IAAI,EAAE;AAFR,GAboD,EAiBpD;AACED,IAAAA,IAAI,EAAE,0BADR;AAEEC,IAAAA,IAAI,EAAE;AAFR,GAjBoD,EAqBpD;AACED,IAAAA,IAAI,EAAE,uBADR;AAEEC,IAAAA,IAAI,EAAE;AAFR,GArBoD,EAyBpD;AACED,IAAAA,IAAI,EAAE,2BADR;AAEEC,IAAAA,IAAI,EAAE;AAFR,GAzBoD,EA6BpD;AACED,IAAAA,IAAI,EAAE,wBADR;AAEEC,IAAAA,IAAI,EAAE;AAFR,GA7BoD,EAiCpD;AACED,IAAAA,IAAI,EAAE,aADR;AAEEC,IAAAA,IAAI,EAAE;AAFR,GAjCoD,EAqCpD;AACED,IAAAA,IAAI,EAAE,kBADR;AAEEC,IAAAA,IAAI,EAAE;AAFR,GArCoD,CAAD,CAArD,CAlIW,CA6KZ;AACC;AACD;AAEA;AACE;AACD;AAEA;AACC;AACE;AACD;AAEA;AACD;AACD;AAED;AACE;AACC;AACD;AAEC;AACA;AACF;;AAEF,sBACE;AAAK,IAAA,KAAK,EAAC,gBAAX;AAAA,2BACM;AAAM,MAAA,SAAS,EAAC,eAAhB;AAAgC,MAAA,QAAQ,EAAEJ,YAA1C;AAAwD,MAAA,OAAO,EAAC,qBAAhE;AAAA,iBACGjB,SAAS,IAAIE,KAAb,gBAAqB;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAArB,GAAiG,IADpG,eAEE;AACE,QAAA,QAAQ,EAAEE,6BADZ;AAEE,QAAA,KAAK,EAAEpC,MAAM,CAACE,YAFhB;AAGE,QAAA,SAAS,EAAC,YAHZ;AAIE,QAAA,IAAI,EAAC,MAJP;AAKE,QAAA,WAAW,EAAC;AALd;AAAA;AAAA;AAAA;AAAA,cAFF,EASG8B,SAAS,IAAI,CAAChC,MAAM,CAACE,YAArB,gBAAoC;AAAM,QAAA,EAAE,EAAC,qBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAApC,GAAyG,IAT5G,eAUE;AACE,QAAA,QAAQ,EAAEsC,0BADZ;AAEE,QAAA,KAAK,EAAExC,MAAM,CAACG,iBAFhB;AAGE,QAAA,SAAS,EAAC,YAHZ;AAIE,QAAA,IAAI,EAAC,MAJP;AAKE,QAAA,WAAW,EAAC;AALd;AAAA;AAAA;AAAA;AAAA,cAVF,EAiBG6B,SAAS,IAAI,CAAChC,MAAM,CAACG,iBAArB,gBAAyC;AAAM,QAAA,EAAE,EAAC,kBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAzC,GAAwG,IAjB3G,eAkBE;AACE,QAAA,QAAQ,EAAE0C,gCADZ;AAEE,QAAA,KAAK,EAAE7C,MAAM,CAACO,eAFhB;AAGE,QAAA,SAAS,EAAC,YAHZ;AAIE,QAAA,IAAI,EAAC,MAJP;AAKE,QAAA,WAAW,EAAC;AALd;AAAA;AAAA;AAAA;AAAA,cAlBF,EAyBGyB,SAAS,IAAI,CAAChC,MAAM,CAACO,eAArB,gBAAuC;AAAM,QAAA,EAAE,EAAC,eAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAvC,GAA6G,IAzBhH,eA0BE;AACE,QAAA,QAAQ,EAAEkC,4BADZ;AAEE,QAAA,KAAK,EAAEzC,MAAM,CAACI,WAFhB;AAGE,QAAA,KAAK,EAAC,YAHR;AAIE,QAAA,IAAI,EAAC,MAJP;AAKE,QAAA,WAAW,EAAC;AALd;AAAA;AAAA;AAAA;AAAA,cA1BF,eAiCE;AACE,QAAA,QAAQ,EAAEsC,wBADZ;AAEE,QAAA,KAAK,EAAE1C,MAAM,CAACK,OAFhB;AAGE,QAAA,KAAK,EAAC,YAHR;AAIE,QAAA,IAAI,EAAC,MAJP;AAKE,QAAA,WAAW,EAAC;AALd;AAAA;AAAA;AAAA;AAAA,cAjCF,eAwCE;AACE,QAAA,QAAQ,EAAEsC,8BADZ;AAEE,QAAA,KAAK,EAAE3C,MAAM,CAAC4C,aAFhB;AAGE,QAAA,KAAK,EAAC,YAHR;AAIE,QAAA,IAAI,EAAC,MAJP;AAKE,QAAA,WAAW,EAAC;AALd;AAAA;AAAA;AAAA;AAAA,cAxCF,eA+CE;AAAO,QAAA,GAAG,EAAC,cAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA/CF,eAgDE;AACE,QAAA,MAAM,EAAC,SADT;AAEE,QAAA,QAAQ,EAAEE,iBAFZ;AAGE,QAAA,KAAK,EAAC,YAHR;AAIE,QAAA,EAAE,EAAC,cAJL;AAKE,QAAA,IAAI,EAAC,MALP;AAME,QAAA,WAAW,EAAC;AANd;AAAA;AAAA;AAAA;AAAA,cAhDF,eAwDE;AACE,QAAA,QAAQ,EAAEE,gBADZ;AAEE,QAAA,KAAK,EAAEhD,MAAM,CAACS,IAFhB;AAGE,QAAA,KAAK,EAAC,YAHR;AAIE,QAAA,IAAI,EAAC,MAJP;AAKE,QAAA,WAAW,EAAC;AALd;AAAA;AAAA;AAAA;AAAA,cAxDF,eA+DE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA/DF,eAgEQ;AAAI,QAAA,SAAS,EAAC,eAAd;AAAA,kBACGG,QAAQ,CAAC2C,GAAT,CAAa,CAAC;AAAEH,UAAAA;AAAF,SAAD,EAAUI,KAAV,KAAoB;AAChC,8BACE;AAAA,mCACE;AAAK,cAAA,SAAS,EAAC,oBAAf;AAAA,qCACE;AAAK,gBAAA,SAAS,EAAC,cAAf;AAAA,wCACE;AACE,kBAAA,IAAI,EAAC,UADP;AAEE,kBAAA,EAAE,EAAG,mBAAkBA,KAAM,EAF/B;AAGE,kBAAA,IAAI,EAAEJ,IAHR;AAIE,kBAAA,KAAK,EAAEA,IAJT,CAKE;AACA;AANF;AAOE,kBAAA,QAAQ,EAAGlC,CAAD,IAAO;AACf,wBAAIuC,GAAG,GAAGvC,CAAC,CAACoB,MAAF,CAASoB,OAAnB;AACAP,oBAAAA,eAAe,CAACvC,QAAQ,CAAC2C,GAAT,CAAaI,IAAI,IAAI;AACnC,0BAAGA,IAAI,CAACP,IAAL,KAAclC,CAAC,CAACoB,MAAF,CAASc,IAA1B,EAAgC;AAAEO,wBAAAA,IAAI,CAACN,IAAL,GAAYI,GAAZ;AAAiB;;AACnD,6BAAOE,IAAP;AACD,qBAHe,CAAD,CAAf;AAID;AAbH;AAAA;AAAA;AAAA;AAAA,wBADF,eAgBE;AAAO,kBAAA,OAAO,EAAG,mBAAkBH,KAAM,EAAzC;AAAA,4BAA6CJ;AAA7C;AAAA;AAAA;AAAA;AAAA,wBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,aAASI,KAAT;AAAA;AAAA;AAAA;AAAA,kBADF;AAwBD,SAzBA;AADH;AAAA;AAAA;AAAA;AAAA,cAhER,eA4FQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA5FR,eA6FQ;AAAI,QAAA,SAAS,EAAC,eAAd;AAAA,kBACGxC,aAAa,CAACuC,GAAd,CAAkB,CAAC;AAAEH,UAAAA;AAAF,SAAD,EAAUI,KAAV,KAAoB;AACrC,8BACE;AAAA,mCACE;AAAK,cAAA,SAAS,EAAC,oBAAf;AAAA,qCACE;AAAK,gBAAA,SAAS,EAAC,cAAf;AAAA,wCACE;AACE,kBAAA,IAAI,EAAC,UADP;AAEE,kBAAA,EAAE,EAAG,mBAAkBA,KAAK,GAAG5C,QAAQ,CAACC,MAAO,EAFjD;AAGE,kBAAA,IAAI,EAAEuC,IAHR;AAIE,kBAAA,KAAK,EAAEA,IAJT,CAKE;AACA;AANF;AAOE,kBAAA,QAAQ,EAAElC,CAAC,IAAI;AACb,wBAAIuC,GAAG,GAAGvC,CAAC,CAACoB,MAAF,CAASoB,OAAnB;AACAJ,oBAAAA,oBAAoB,CAACtC,aAAa,CAACuC,GAAd,CAAkBK,CAAC,IAAI;AAC1C,0BAAGA,CAAC,CAACR,IAAF,KAAWlC,CAAC,CAACoB,MAAF,CAASc,IAAvB,EAA6B;AAAEQ,wBAAAA,CAAC,CAACP,IAAF,GAASI,GAAT;AAAc;;AAC7C,6BAAOG,CAAP;AACD,qBAHoB,CAAD,CAApB;AAID;AAbH;AAAA;AAAA;AAAA;AAAA,wBADF,eAgBE;AAAO,kBAAA,OAAO,EAAG,mBAAkBJ,KAAK,GAAC5C,QAAQ,CAACC,MAAO,EAAzD;AAAA,4BAA6DuC;AAA7D;AAAA;AAAA;AAAA;AAAA,wBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,aAASI,KAAK,GAAC5C,QAAQ,CAACC,MAAxB;AAAA;AAAA;AAAA;AAAA,kBADF;AAwBD,SAzBA;AADH;AAAA;AAAA;AAAA;AAAA,cA7FR,eAyHE;AAAQ,QAAA,KAAK,EAAC,YAAd;AAA2B,QAAA,IAAI,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAzHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADN;AAAA;AAAA;AAAA;AAAA,UADF;AAiID;;GAxUQd,G;;KAAAA,G;AA2UT,eAAeA,GAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport axios from \"axios\";\nimport './index.css';\nimport './components/SearchBar.js'\nimport SearchBar from './components/SearchBar';\n\n\nfunction App() {\n  const [values,setValues] = useState({\n    businessName: \"\",\n    businessOwnerName: \"\",\n    description: \"\",\n    address: \"\",\n    publictContact: \"\",\n    businessContact: \"\",\n    image: './default_img.jpeg',\n    tags: \"\",\n  });\n\n  function send(){\n    for(var i = 0; i < industry.length; i++) {\n      industry[i] = JSON.stringify(industry[i]);\n    }\n    neighbourhood.forEach(e => e = JSON.stringify(e))\n    var formData = new FormData();\n    Object.keys(values).forEach((key) => {\n      formData.append(key, values[key]);\n    })\n    formData.append(\"industry\", industry);\n    formData.append(\"neighborhood\", neighbourhood);\n    axios.post('http://localhost:3003/url/saveProfile', formData, {\n      headers: {\n        \"content-Type\": 'multipart/form-data'\n      }\n    })\n\n    .then((response) => {\n      console.log(response);\n    }, (error) => {\n      console.log(error);\n    });\n  }\n\n  const[submitted, setSubmitted] = useState(false);\n  const[valid,setValid] = useState(false);\n\n  const handleBusinessNameInputChange = (event) => {\n    setValues({...values, businessName: event.target.value})\n  }\n  const handleOwnerNameInputChange = (event) => {\n    setValues({...values, businessOwnerName: event.target.value})\n  }\n  const handleDescriptionInputChange = (event) => {\n    setValues({...values, description: event.target.value})\n  }\n  const handleAddressInputChange = (event) => {\n    setValues({...values, address: event.target.value})\n  }\n  const handlePublicContactInputChange = (event) => {\n    setValues({...values, publicContact: event.target.value})\n  }\n  const handleBusinessContactInputChange = (event) => {\n    setValues({...values, businessContact: event.target.value})\n  }\n  const handleImageChange = (event) => {\n    setValues({...values,image: event.target.files[0]})\n  }\n  const handleTagsChange = (event) => {\n    setValues({...values,tags: event.target.value})\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if(values.businessOwnerName && values.businessName && values.businessContact){\n      setValid(true);\n    }\n    setSubmitted(true);\n    send();\n  }\n\n\n    //the tags array should be filled with all the tags that we have\n    const [industry,setindustryFlag] = useState([\n      {\n        name: \"food\",\n        flag: false\n      },\n      {\n        name: \"accomodation\",\n        flag: false\n      },\n      {\n        name: \"arts\",\n        flag: false\n      },\n      {\n        name: \"entertainment\",\n        flag: false\n      },\n      {\n        name: \"recreation\",\n        flag: false\n      },\n      {\n        name: \"construction\",\n        flag: false\n      },\n      {\n        name: \"education\",\n        flag: false\n      },\n      {\n        name: \"healthcare\",\n        flag: false\n      },\n      {\n        name: \"manufacturing\",\n        flag: false\n      },\n      {\n        name: \"real estate\",\n        flag: false\n      },\n      {\n        name: \"retail\",\n        flag: false\n      },\n      {\n        name: \"wholesale\",\n        flag: false\n      },\n      {\n        name: \"clothing\",\n        flag: false\n      }\n    ]);\n\n    const [neighbourhood,setneighbourhoodFlag] = useState([\n      {\n        name: \"downtown\",\n        flag: false\n      },\n      {\n        name: \"old montreal\",\n        flag: false\n      },\n      {\n        name: \"plateau and mile end\",\n        flag: false\n      },\n      {\n        name: \"the village\",\n        flag: false\n      },\n      {\n        name: \"mont royal and outrement\",\n        flag: false\n      },\n      {\n        name: \"hochelaga-maisonneuve\",\n        flag: false\n      },\n      {\n        name: \"little italy and villeray\",\n        flag: false\n      },\n      {\n        name: \"les quartiers du canal\",\n        flag: false\n      },\n      {\n        name: \"west island\",\n        flag: false\n      },\n      {\n        name: \"pole des rapides\",\n        flag: false\n      }\n    ]);\n    \n   // const [checkedIndustryState, setIndustryCheckedState] = useState(\n    //  new Array(industry.length).fill(false)\n   // );\n\n   // const [checkedNeighbourhoodState, setNeighbourhoodCheckedState] = useState(\n     // new Array(neighbourhood.length).fill(false)\n    //);\n\n    //const handleIndustryOnChange = (position) => {\n     // const updatedIndustryCheckedState = checkedIndustryState.map((item, index) =>\n       // index === position ? !item : item\n      //);\n\n      //setIndustryCheckedState(updatedIndustryCheckedState);\n     // industry[position].flag = !industry[position].flag\n    //}\n\n   // const handleNeighbourhoodOnChange = (position) => {\n     // const updatedNeighbourhoodCheckedState = checkedNeighbourhoodState.map((item, index) =>\n      //  index === position ? !item : item\n     // );\n\n      //setNeighbourhoodCheckedState(updatedNeighbourhoodCheckedState);\n      //neighbourhood[position].flag = !neighbourhood[position].flag\n    //}\n\n  return (\n    <div class=\"form-container\">\n          <form className=\"register-form\" onSubmit={handleSubmit} encType=\"multipart/form-data\">\n            {submitted && valid ? <div className=\"success-message\">Success! Thank you for registering</div> : null}\n            <input\n              onChange={handleBusinessNameInputChange}\n              value={values.businessName}\n              className=\"form-field\"\n              type=\"text\"\n              placeholder=\"Business Name\"\n            />\n            {submitted && !values.businessName ? <span id=\"business-name-error\">Please enter a business name</span> : null}\n            <input\n              onChange={handleOwnerNameInputChange}\n              value={values.businessOwnerName}\n              className=\"form-field\"\n              type=\"text\"\n              placeholder=\"Owner Name\"\n            />\n            {submitted && !values.businessOwnerName ? <span id=\"owner-name-error\">Please enter a owner name</span> : null}\n            <input\n              onChange={handleBusinessContactInputChange}\n              value={values.businessContact}\n              className=\"form-field\"\n              type=\"text\"\n              placeholder=\"Private Contact\"\n            />\n            {submitted && !values.businessContact ? <span id=\"contact-error\">Please provide contact information.</span> : null}\n            <input\n              onChange={handleDescriptionInputChange}\n              value={values.description}\n              class=\"form-field\"\n              type=\"text\"\n              placeholder=\"Description\"\n            />\n            <input\n              onChange={handleAddressInputChange}\n              value={values.address}\n              class=\"form-field\"\n              type=\"text\"\n              placeholder=\"Address\"\n            />\n            <input\n              onChange={handlePublicContactInputChange}\n              value={values.publicContact}\n              class=\"form-field\"\n              type=\"text\"\n              placeholder=\"Public Contact\"\n            />\n            <label for=\"image-upload\">Upload a background image:</label>\n            <input\n              accept=\"image/*\"\n              onChange={handleImageChange}\n              class=\"form-field\"\n              id=\"image-upload\"\n              type=\"file\"\n              placeholder=\"Insert an image\"\n            />\n            <input\n              onChange={handleTagsChange}\n              value={values.tags}\n              class=\"form-field\"\n              type=\"text\"\n              placeholder=\"Enter some tags separated by commas\"\n            />\n            <h3>Select Industry</h3>\n                  <ul className=\"industry-list\">\n                    {industry.map(({ name },index) => {\n                      return (\n                        <li key={index}>\n                          <div className=\"indsutry-list-item\">\n                            <div className=\"left-section\">\n                              <input\n                                type=\"checkbox\"\n                                id={`custom-checkbox-${index}`}\n                                name={name}\n                                value={name}\n                                //checked={checkedIndustryState[index]}\n                                //onChange={() => handleIndustryOnChange(index)}\n                                onChange={(e) => {\n                                  let val = e.target.checked;\n                                  setindustryFlag(industry.map(cbox => {\n                                    if(cbox.name === e.target.name) { cbox.flag = val }\n                                    return cbox;\n                                  }))\n                                }}\n                              />\n                              <label htmlFor={`custom-checkbox-${index}`}>{name}</label>\n                            </div>\n                          </div>\n                        </li>\n                      );\n                    })}\n                  </ul>\n                  <h3>Select neighbourhood</h3>\n                  <ul className=\"industry-list\">\n                    {neighbourhood.map(({ name },index) => {\n                      return (\n                        <li key={index+industry.length}>\n                          <div className=\"industry-list-item\">\n                            <div className=\"left-section\">\n                              <input\n                                type=\"checkbox\"\n                                id={`custom-checkbox-${index + industry.length}`}\n                                name={name}\n                                value={name}\n                                //checked={checkedNeighbourhoodState[index]}\n                                //onChange={() => handleNeighbourhoodOnChange(index)}\n                                onChange={e => {\n                                  let val = e.target.checked;\n                                  setneighbourhoodFlag(neighbourhood.map(n => {\n                                    if(n.name === e.target.name) { n.flag = val }\n                                    return n;\n                                  }))\n                                }}\n                              />\n                              <label htmlFor={`custom-checkbox-${index+industry.length}`}>{name}</label>\n                            </div>\n                          </div>\n                        </li>\n                      );\n                    })}\n                  </ul>\n            <button class=\"form-field\" type=\"submit\">\n              Register\n            </button>\n          </form>\n    </div>\n  )\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}