{"ast":null,"code":"var _jsxFileName = \"/home/ghait/Desktop/Desta25/DestaFend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport './index.css';\nimport './components/SearchBar.js';\nimport SearchBar from './components/SearchBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [values, setValues] = useState({\n    businessName: \"\",\n    businessOwnerName: \"\",\n    description: \"\",\n    address: \"\",\n    publictContact: \"\",\n    businessContact: \"\",\n    image: './default_img.jpeg',\n    tags: \"\"\n  });\n\n  function send() {\n    var formData = new FormData();\n    Object.keys(values).forEach(key => {\n      formData.append(key, values[key]);\n    });\n    formData.append(\"industry\", industry);\n    formData.append(\"neighborhood\", neighbourhood);\n    axios.post('http://localhost:3003/url/saveProfile', formData, {\n      headers: {\n        \"content-Type\": 'multipart/form-data'\n      }\n    }).then(response => {\n      console.log(response);\n    }, error => {\n      console.log(error);\n    });\n  }\n\n  const [submitted, setSubmitted] = useState(false);\n  const [valid, setValid] = useState(false);\n\n  const handleBusinessNameInputChange = event => {\n    setValues({ ...values,\n      businessName: event.target.value\n    });\n  };\n\n  const handleOwnerNameInputChange = event => {\n    setValues({ ...values,\n      businessOwnerName: event.target.value\n    });\n  };\n\n  const handleDescriptionInputChange = event => {\n    setValues({ ...values,\n      description: event.target.value\n    });\n  };\n\n  const handleAddressInputChange = event => {\n    setValues({ ...values,\n      address: event.target.value\n    });\n  };\n\n  const handlePublicContactInputChange = event => {\n    setValues({ ...values,\n      publicContact: event.target.value\n    });\n  };\n\n  const handleBusinessContactInputChange = event => {\n    setValues({ ...values,\n      businessContact: event.target.value\n    });\n  };\n\n  const handleImageChange = event => {\n    setValues({ ...values,\n      image: event.target.value\n    });\n  };\n\n  const handleTagsChange = event => {\n    setValues({ ...values,\n      tags: event.target.value\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (values.businessOwnerName && values.businessName && values.businessContact) {\n      setValid(true);\n    }\n\n    setSubmitted(true);\n    send();\n  }; //the tags array should be filled with all the tags that we have\n\n\n  const [industry, setindustryFlag] = useState([{\n    name: \"food\",\n    flag: false\n  }, {\n    name: \"accomodation\",\n    flag: false\n  }, {\n    name: \"arts\",\n    flag: false\n  }, {\n    name: \"entertainment\",\n    flag: false\n  }, {\n    name: \"recreation\",\n    flag: false\n  }, {\n    name: \"construction\",\n    flag: false\n  }, {\n    name: \"education\",\n    flag: false\n  }, {\n    name: \"healthcare\",\n    flag: false\n  }, {\n    name: \"manufacturing\",\n    flag: false\n  }, {\n    name: \"real estate\",\n    flag: false\n  }, {\n    name: \"retail\",\n    flag: false\n  }, {\n    name: \"wholesale\",\n    flag: false\n  }, {\n    name: \"clothing\",\n    flag: false\n  }]);\n  const [neighbourhood, setneighbourhoodFlag] = useState([{\n    name: \"downtown\",\n    flag: false\n  }, {\n    name: \"old montreal\",\n    flag: false\n  }, {\n    name: \"plateau and mile end\",\n    flag: false\n  }, {\n    name: \"the village\",\n    flag: false\n  }, {\n    name: \"mont royal and outrement\",\n    flag: false\n  }, {\n    name: \"hochelaga-maisonneuve\",\n    flag: false\n  }, {\n    name: \"little italy and villeray\",\n    flag: false\n  }, {\n    name: \"les quartiers du canal\",\n    flag: false\n  }, {\n    name: \"west island\",\n    flag: false\n  }, {\n    name: \"pole des rapides\",\n    flag: false\n  }]);\n  const [checkedIndustryState, setIndustryCheckedState] = useState(new Array(industry.length).fill(false));\n  const [checkedNeighbourhoodState, setNeighbourhoodCheckedState] = useState(new Array(neighbourhood.length).fill(false));\n\n  const handleIndustryOnChange = position => {\n    const updatedIndustryCheckedState = checkedIndustryState.map((item, index) => index === position ? !item : item);\n    setIndustryCheckedState(updatedIndustryCheckedState);\n    industry[position].flag = !industry[position].flag;\n  };\n\n  const handleNeighbourhoodOnChange = position => {\n    const updatedNeighbourhoodCheckedState = checkedNeighbourhoodState.map((item, index) => index === position ? !item : item);\n    setNeighbourhoodCheckedState(updatedNeighbourhoodCheckedState);\n    neighbourhood[position].flag = !neighbourhood[position].flag;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"form-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      class: \"register-form\",\n      onSubmit: handleSubmit,\n      encType: \"multipart/form-data\",\n      children: [submitted && valid ? /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"success-message\",\n        children: \"Success! Thank you for registering\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 35\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleBusinessNameInputChange,\n        value: values.businessName,\n        class: \"form-field\",\n        type: \"text\",\n        placeholder: \"Business Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 13\n      }, this), submitted && !values.businessName ? /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"business-name-error\",\n        children: \"Please enter a business name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 50\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleOwnerNameInputChange,\n        value: values.businessOwnerName,\n        class: \"form-field\",\n        type: \"text\",\n        placeholder: \"Owner Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 13\n      }, this), submitted && !values.businessOwnerName ? /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"owner-name-error\",\n        children: \"Please enter a owner name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 55\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleBusinessContactInputChange,\n        value: values.businessContact,\n        class: \"form-field\",\n        type: \"text\",\n        placeholder: \"Private Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 13\n      }, this), submitted && !values.businessContact ? /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"contact-error\",\n        children: \"Please provide contact information.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 53\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleDescriptionInputChange,\n        value: values.description,\n        class: \"form-field\",\n        type: \"text\",\n        placeholder: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleAddressInputChange,\n        value: values.address,\n        class: \"form-field\",\n        type: \"text\",\n        placeholder: \"Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handlePublicContactInputChange,\n        value: values.publicContact,\n        class: \"form-field\",\n        type: \"text\",\n        placeholder: \"Public Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"image-upload\",\n        children: \"Upload a background image:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        accept: \"image/*\",\n        onChange: handleImageChange,\n        class: \"form-field\",\n        id: \"image-upload\",\n        type: \"file\",\n        placeholder: \"Insert an image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleTagsChange,\n        value: values.tags,\n        class: \"form-field\",\n        type: \"text\",\n        placeholder: \"Enter some tags separated by commas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Select Industry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"industry-list\",\n        children: industry.map(({\n          name\n        }, index) => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"indsutry-list-item\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"left-section\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  id: `custom-checkbox-${index}`,\n                  name: name,\n                  value: name,\n                  checked: checkedIndustryState[index],\n                  onChange: () => handleIndustryOnChange(index)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 31\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: `custom-checkbox-${index}`,\n                  children: name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 31\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 27\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Select neighbourhood\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"industry-list\",\n        children: neighbourhood.map(({\n          name\n        }, index) => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"industry-list-item\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"left-section\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  id: `custom-checkbox-${index + industry.length}`,\n                  name: name,\n                  value: name,\n                  checked: checkedNeighbourhoodState[index],\n                  onChange: () => handleNeighbourhoodOnChange(index)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 31\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: `custom-checkbox-${index + industry.length}`,\n                  children: name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 31\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 27\n            }, this)\n          }, index + industry.length, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"form-field\",\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"f1khH15jOtcGyOB7E8ComWoHz/Q=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/ghait/Desktop/Desta25/DestaFend/src/App.js"],"names":["React","useState","useEffect","axios","SearchBar","App","values","setValues","businessName","businessOwnerName","description","address","publictContact","businessContact","image","tags","send","formData","FormData","Object","keys","forEach","key","append","industry","neighbourhood","post","headers","then","response","console","log","error","submitted","setSubmitted","valid","setValid","handleBusinessNameInputChange","event","target","value","handleOwnerNameInputChange","handleDescriptionInputChange","handleAddressInputChange","handlePublicContactInputChange","publicContact","handleBusinessContactInputChange","handleImageChange","handleTagsChange","handleSubmit","preventDefault","setindustryFlag","name","flag","setneighbourhoodFlag","checkedIndustryState","setIndustryCheckedState","Array","length","fill","checkedNeighbourhoodState","setNeighbourhoodCheckedState","handleIndustryOnChange","position","updatedIndustryCheckedState","map","item","index","handleNeighbourhoodOnChange","updatedNeighbourhoodCheckedState"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport axios from \"axios\";\nimport './index.css';\nimport './components/SearchBar.js'\nimport SearchBar from './components/SearchBar';\n\n\nfunction App() {\n  const [values,setValues] = useState({\n    businessName: \"\",\n    businessOwnerName: \"\",\n    description: \"\",\n    address: \"\",\n    publictContact: \"\",\n    businessContact: \"\",\n    image: './default_img.jpeg',\n    tags: \"\",\n  });\n\n  function send(){\n    var formData = new FormData();\n    Object.keys(values).forEach((key) => {\n      formData.append(key, values[key]);\n    })\n    formData.append(\"industry\", industry);\n    formData.append(\"neighborhood\", neighbourhood);\n    axios.post('http://localhost:3003/url/saveProfile', formData, {\n      headers: {\n        \"content-Type\": 'multipart/form-data'\n      }\n    })\n\n    .then((response) => {\n      console.log(response);\n    }, (error) => {\n      console.log(error);\n    });\n  }\n\n  const[submitted, setSubmitted] = useState(false);\n  const[valid,setValid] = useState(false);\n\n  const handleBusinessNameInputChange = (event) => {\n    setValues({...values, businessName: event.target.value})\n  }\n  const handleOwnerNameInputChange = (event) => {\n    setValues({...values, businessOwnerName: event.target.value})\n  }\n  const handleDescriptionInputChange = (event) => {\n    setValues({...values, description: event.target.value})\n  }\n  const handleAddressInputChange = (event) => {\n    setValues({...values, address: event.target.value})\n  }\n  const handlePublicContactInputChange = (event) => {\n    setValues({...values, publicContact: event.target.value})\n  }\n  const handleBusinessContactInputChange = (event) => {\n    setValues({...values, businessContact: event.target.value})\n  }\n  const handleImageChange = (event) => {\n    setValues({...values,image: event.target.value})\n  }\n  const handleTagsChange = (event) => {\n    setValues({...values,tags: event.target.value})\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if(values.businessOwnerName && values.businessName && values.businessContact){\n      setValid(true);\n    }\n    setSubmitted(true);\n    send();\n  }\n\n\n    //the tags array should be filled with all the tags that we have\n    const [industry,setindustryFlag] = useState([\n      {\n        name: \"food\",\n        flag: false\n      },\n      {\n        name: \"accomodation\",\n        flag: false\n      },\n      {\n        name: \"arts\",\n        flag: false\n      },\n      {\n        name: \"entertainment\",\n        flag: false\n      },\n      {\n        name: \"recreation\",\n        flag: false\n      },\n      {\n        name: \"construction\",\n        flag: false\n      },\n      {\n        name: \"education\",\n        flag: false\n      },\n      {\n        name: \"healthcare\",\n        flag: false\n      },\n      {\n        name: \"manufacturing\",\n        flag: false\n      },\n      {\n        name: \"real estate\",\n        flag: false\n      },\n      {\n        name: \"retail\",\n        flag: false\n      },\n      {\n        name: \"wholesale\",\n        flag: false\n      },\n      {\n        name: \"clothing\",\n        flag: false\n      }\n    ]);\n\n    const [neighbourhood,setneighbourhoodFlag] = useState([\n      {\n        name: \"downtown\",\n        flag: false\n      },\n      {\n        name: \"old montreal\",\n        flag: false\n      },\n      {\n        name: \"plateau and mile end\",\n        flag: false\n      },\n      {\n        name: \"the village\",\n        flag: false\n      },\n      {\n        name: \"mont royal and outrement\",\n        flag: false\n      },\n      {\n        name: \"hochelaga-maisonneuve\",\n        flag: false\n      },\n      {\n        name: \"little italy and villeray\",\n        flag: false\n      },\n      {\n        name: \"les quartiers du canal\",\n        flag: false\n      },\n      {\n        name: \"west island\",\n        flag: false\n      },\n      {\n        name: \"pole des rapides\",\n        flag: false\n      }\n    ]);\n    \n    const [checkedIndustryState, setIndustryCheckedState] = useState(\n      new Array(industry.length).fill(false)\n    );\n\n    const [checkedNeighbourhoodState, setNeighbourhoodCheckedState] = useState(\n      new Array(neighbourhood.length).fill(false)\n    );\n\n    const handleIndustryOnChange = (position) => {\n      const updatedIndustryCheckedState = checkedIndustryState.map((item, index) =>\n        index === position ? !item : item\n      );\n\n      setIndustryCheckedState(updatedIndustryCheckedState);\n      industry[position].flag = !industry[position].flag\n    }\n\n    const handleNeighbourhoodOnChange = (position) => {\n      const updatedNeighbourhoodCheckedState = checkedNeighbourhoodState.map((item, index) =>\n        index === position ? !item : item\n      );\n\n      setNeighbourhoodCheckedState(updatedNeighbourhoodCheckedState);\n      neighbourhood[position].flag = !neighbourhood[position].flag\n    }\n\n  return (\n    <div class=\"form-container\">\n          <form class=\"register-form\" onSubmit={handleSubmit} encType=\"multipart/form-data\">\n            {submitted && valid ? <div class=\"success-message\">Success! Thank you for registering</div> : null}\n            <input\n              onChange={handleBusinessNameInputChange}\n              value={values.businessName}\n              class=\"form-field\"\n              type=\"text\"\n              placeholder=\"Business Name\"\n            />\n            {submitted && !values.businessName ? <span id=\"business-name-error\">Please enter a business name</span> : null}\n            <input\n              onChange={handleOwnerNameInputChange}\n              value={values.businessOwnerName}\n              class=\"form-field\"\n              type=\"text\"\n              placeholder=\"Owner Name\"\n            />\n            {submitted && !values.businessOwnerName ? <span id=\"owner-name-error\">Please enter a owner name</span> : null}\n            <input\n              onChange={handleBusinessContactInputChange}\n              value={values.businessContact}\n              class=\"form-field\"\n              type=\"text\"\n              placeholder=\"Private Contact\"\n            />\n            {submitted && !values.businessContact ? <span id=\"contact-error\">Please provide contact information.</span> : null}\n            <input\n              onChange={handleDescriptionInputChange}\n              value={values.description}\n              class=\"form-field\"\n              type=\"text\"\n              placeholder=\"Description\"\n            />\n            <input\n              onChange={handleAddressInputChange}\n              value={values.address}\n              class=\"form-field\"\n              type=\"text\"\n              placeholder=\"Address\"\n            />\n            <input\n              onChange={handlePublicContactInputChange}\n              value={values.publicContact}\n              class=\"form-field\"\n              type=\"text\"\n              placeholder=\"Public Contact\"\n            />\n            <label for=\"image-upload\">Upload a background image:</label>\n            <input\n              accept=\"image/*\"\n              onChange={handleImageChange}\n              class=\"form-field\"\n              id=\"image-upload\"\n              type=\"file\"\n              placeholder=\"Insert an image\"\n            />\n            <input\n              onChange={handleTagsChange}\n              value={values.tags}\n              class=\"form-field\"\n              type=\"text\"\n              placeholder=\"Enter some tags separated by commas\"\n            />\n            <h3>Select Industry</h3>\n                  <ul className=\"industry-list\">\n                    {industry.map(({ name },index) => {\n                      return (\n                        <li key={index}>\n                          <div className=\"indsutry-list-item\">\n                            <div className=\"left-section\">\n                              <input\n                                type=\"checkbox\"\n                                id={`custom-checkbox-${index}`}\n                                name={name}\n                                value={name}\n                                checked={checkedIndustryState[index]}\n                                onChange={() => handleIndustryOnChange(index)}\n                              />\n                              <label htmlFor={`custom-checkbox-${index}`}>{name}</label>\n                            </div>\n                          </div>\n                        </li>\n                      );\n                    })}\n                  </ul>\n                  <h3>Select neighbourhood</h3>\n                  <ul className=\"industry-list\">\n                    {neighbourhood.map(({ name },index) => {\n                      return (\n                        <li key={index+industry.length}>\n                          <div className=\"industry-list-item\">\n                            <div className=\"left-section\">\n                              <input\n                                type=\"checkbox\"\n                                id={`custom-checkbox-${index + industry.length}`}\n                                name={name}\n                                value={name}\n                                checked={checkedNeighbourhoodState[index]}\n                                onChange={() => handleNeighbourhoodOnChange(index)}\n                              />\n                              <label htmlFor={`custom-checkbox-${index+industry.length}`}>{name}</label>\n                            </div>\n                          </div>\n                        </li>\n                      );\n                    })}\n                  </ul>\n            <button class=\"form-field\" type=\"submit\">\n              Register\n            </button>\n          </form>\n    </div>\n  )\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}