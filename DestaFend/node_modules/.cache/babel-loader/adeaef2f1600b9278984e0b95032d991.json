{"ast":null,"code":"var _jsxFileName = \"/home/ghait/Desktop/Desta25/DestaFend/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport '../index.css';\nimport './SearchBar.css';\nimport NavBar from './NavBar.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [values, setValues] = useState({\n    businessName: \"\",\n    businessOwnerName: \"\",\n    description: \"\",\n    address: \"\",\n    publicContact: \"\",\n    businessContact: \"\",\n    image: './default_img.jpeg',\n    tags: \"\"\n  });\n\n  function send() {\n    let industry_clone = [...industry];\n    let neighbourhood_clone = [...neighbourhood];\n\n    for (var i = 0; i < industry_clone.length; i++) {\n      industry_clone[i] = JSON.stringify(industry_clone[i]);\n    }\n\n    for (var j = 0; j < neighbourhood_clone.length; j++) {\n      neighbourhood_clone[j] = JSON.stringify(neighbourhood_clone[j]);\n    }\n\n    var formData = new FormData();\n    Object.keys(values).forEach(key => {\n      formData.append(key, values[key]);\n    });\n    formData.append(\"industrySize\", industry_clone.length);\n    formData.append(\"neighbourhoodSize\", neighbourhood_clone.length);\n\n    for (var k = 0; k < industry_clone.length; k++) {\n      formData.append(\"industry\" + k, industry_clone[k]);\n    }\n\n    for (var k = 0; k < neighbourhood_clone.length; k++) {\n      formData.append(\"neighbourhood\" + k, neighbourhood_clone[k]);\n    }\n\n    axios.post('http://localhost:3003/url/saveProfile', formData, {\n      headers: {\n        \"content-Type\": 'multipart/form-data'\n      }\n    }).then(response => {\n      console.log(response);\n    }, error => {\n      console.log(error);\n    });\n  }\n\n  const [submitted, setSubmitted] = useState(false);\n  const [valid, setValid] = useState(false);\n\n  const handleBusinessNameInputChange = event => {\n    setValues({ ...values,\n      businessName: event.target.value\n    });\n  };\n\n  const handleOwnerNameInputChange = event => {\n    setValues({ ...values,\n      businessOwnerName: event.target.value\n    });\n  };\n\n  const handleDescriptionInputChange = event => {\n    setValues({ ...values,\n      description: event.target.value\n    });\n  };\n\n  const handleAddressInputChange = event => {\n    setValues({ ...values,\n      address: event.target.value\n    });\n  };\n\n  const handlePublicContactInputChange = event => {\n    setValues({ ...values,\n      publicContact: event.target.value\n    });\n  };\n\n  const handleBusinessContactInputChange = event => {\n    setValues({ ...values,\n      businessContact: event.target.value\n    });\n  };\n\n  const handleImageChange = event => {\n    setValues({ ...values,\n      image: event.target.files[0]\n    });\n  };\n\n  const handleTagsChange = event => {\n    setValues({ ...values,\n      tags: event.target.value\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (values.businessOwnerName && values.businessName && values.businessContact) {\n      send();\n      setValid(true);\n      window.location.href = '/';\n    }\n\n    setSubmitted(true);\n  }; //the tags array should be filled with all the tags that we have\n\n\n  const [industry, setindustryFlag] = useState([{\n    name: \"food\",\n    flag: false\n  }, {\n    name: \"accomodation\",\n    flag: false\n  }, {\n    name: \"arts\",\n    flag: false\n  }, {\n    name: \"entertainment\",\n    flag: false\n  }, {\n    name: \"recreation\",\n    flag: false\n  }, {\n    name: \"construction\",\n    flag: false\n  }, {\n    name: \"education\",\n    flag: false\n  }, {\n    name: \"healthcare\",\n    flag: false\n  }, {\n    name: \"manufacturing\",\n    flag: false\n  }, {\n    name: \"real estate\",\n    flag: false\n  }, {\n    name: \"retail\",\n    flag: false\n  }, {\n    name: \"wholesale\",\n    flag: false\n  }, {\n    name: \"clothing\",\n    flag: false\n  }]);\n  const [neighbourhood, setneighbourhoodFlag] = useState([{\n    name: \"downtown\",\n    flag: false\n  }, {\n    name: \"old montreal\",\n    flag: false\n  }, {\n    name: \"plateau and mile end\",\n    flag: false\n  }, {\n    name: \"the village\",\n    flag: false\n  }, {\n    name: \"mont royal and outrement\",\n    flag: false\n  }, {\n    name: \"hochelaga-maisonneuve\",\n    flag: false\n  }, {\n    name: \"little italy and villeray\",\n    flag: false\n  }, {\n    name: \"les quartiers du canal\",\n    flag: false\n  }, {\n    name: \"west island\",\n    flag: false\n  }, {\n    name: \"pole des rapides\",\n    flag: false\n  }]); // const [checkedIndustryState, setIndustryCheckedState] = useState(\n  //  new Array(industry.length).fill(false)\n  // );\n  // const [checkedNeighbourhoodState, setNeighbourhoodCheckedState] = useState(\n  // new Array(neighbourhood.length).fill(false)\n  //);\n  //const handleIndustryOnChange = (position) => {\n  // const updatedIndustryCheckedState = checkedIndustryState.map((item, index) =>\n  // index === position ? !item : item\n  //);\n  //setIndustryCheckedState(updatedIndustryCheckedState);\n  // industry[position].flag = !industry[position].flag\n  //}\n  // const handleNeighbourhoodOnChange = (position) => {\n  // const updatedNeighbourhoodCheckedState = checkedNeighbourhoodState.map((item, index) =>\n  //  index === position ? !item : item\n  // );\n  //setNeighbourhoodCheckedState(updatedNeighbourhoodCheckedState);\n  //neighbourhood[position].flag = !neighbourhood[position].flag\n  //}\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"form-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"register-form\",\n        onSubmit: handleSubmit,\n        encType: \"multipart/form-data\",\n        children: [submitted && valid ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"success-message\",\n          children: \"Success! Thank you for registering\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 35\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleBusinessNameInputChange,\n          value: values.businessName,\n          className: \"form-field\",\n          type: \"text\",\n          placeholder: \"Business Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this), submitted && !values.businessName ? /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"business-name-error\",\n          children: \"Please enter a business name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 50\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleOwnerNameInputChange,\n          value: values.businessOwnerName,\n          className: \"form-field\",\n          type: \"text\",\n          placeholder: \"Owner Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this), submitted && !values.businessOwnerName ? /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"owner-name-error\",\n          children: \"Please enter a owner name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 55\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleBusinessContactInputChange,\n          value: values.businessContact,\n          className: \"form-field\",\n          type: \"text\",\n          placeholder: \"Private Contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }, this), submitted && !values.businessContact ? /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"contact-error\",\n          children: \"Please provide contact information.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 53\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleDescriptionInputChange,\n          value: values.description,\n          class: \"form-field\",\n          type: \"text\",\n          placeholder: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleAddressInputChange,\n          value: values.address,\n          class: \"form-field\",\n          type: \"text\",\n          placeholder: \"Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handlePublicContactInputChange,\n          value: values.publicContact,\n          class: \"form-field\",\n          type: \"text\",\n          placeholder: \"Public Contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"image-upload\",\n          children: \"Upload a background image:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          accept: \"image/*\",\n          onChange: handleImageChange,\n          class: \"form-field\",\n          id: \"image-upload\",\n          type: \"file\",\n          placeholder: \"Insert an image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleTagsChange,\n          value: values.tags,\n          class: \"form-field\",\n          type: \"text\",\n          placeholder: \"Enter some tags separated by commas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Select Industry\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"industry-list\",\n          children: industry.map(({\n            name\n          }, index) => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"indsutry-list-item\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"left-section\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    id: `custom-checkbox-${index}`,\n                    name: name,\n                    value: name //checked={checkedIndustryState[index]}\n                    //onChange={() => handleIndustryOnChange(index)}\n                    ,\n                    onChange: e => {\n                      let val = e.target.checked;\n                      setindustryFlag(industry.map(cbox => {\n                        if (cbox.name === e.target.name) {\n                          cbox.flag = val;\n                        }\n\n                        return cbox;\n                      }));\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 298,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: `custom-checkbox-${index}`,\n                    children: name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 313,\n                    columnNumber: 31\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 27\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 25\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Select neighbourhood\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"industry-list\",\n          children: neighbourhood.map(({\n            name\n          }, index) => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"industry-list-item\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"left-section\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    id: `custom-checkbox-${index + industry.length}`,\n                    name: name,\n                    value: name //checked={checkedNeighbourhoodState[index]}\n                    //onChange={() => handleNeighbourhoodOnChange(index)}\n                    ,\n                    onChange: e => {\n                      let val = e.target.checked;\n                      setneighbourhoodFlag(neighbourhood.map(n => {\n                        if (n.name === e.target.name) {\n                          n.flag = val;\n                        }\n\n                        return n;\n                      }));\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 327,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: `custom-checkbox-${index + industry.length}`,\n                    children: name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 342,\n                    columnNumber: 31\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 27\n              }, this)\n            }, index + industry.length, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 25\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"form-field\",\n          type: \"submit\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"l0oCTDM6a+7cUY5WVIw7wqo2/1Q=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/ghait/Desktop/Desta25/DestaFend/src/components/App.js"],"names":["React","useState","useEffect","axios","NavBar","App","values","setValues","businessName","businessOwnerName","description","address","publicContact","businessContact","image","tags","send","industry_clone","industry","neighbourhood_clone","neighbourhood","i","length","JSON","stringify","j","formData","FormData","Object","keys","forEach","key","append","k","post","headers","then","response","console","log","error","submitted","setSubmitted","valid","setValid","handleBusinessNameInputChange","event","target","value","handleOwnerNameInputChange","handleDescriptionInputChange","handleAddressInputChange","handlePublicContactInputChange","handleBusinessContactInputChange","handleImageChange","files","handleTagsChange","handleSubmit","preventDefault","window","location","href","setindustryFlag","name","flag","setneighbourhoodFlag","map","index","e","val","checked","cbox","n"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport axios from \"axios\";\nimport '../index.css';\nimport './SearchBar.css'\nimport NavBar from './NavBar.js'\n\n\nfunction App() {\n  const [values,setValues] = useState({\n    businessName: \"\",\n    businessOwnerName: \"\",\n    description: \"\",\n    address: \"\",\n    publicContact: \"\",\n    businessContact: \"\",\n    image: './default_img.jpeg',\n    tags: \"\",\n  });\n\n  function send(){\n    let industry_clone = [...industry];\n    let neighbourhood_clone = [...neighbourhood];\n    \n    for(var i = 0; i < industry_clone.length; i++) {\n      industry_clone[i] = JSON.stringify(industry_clone[i]);\n    }\n    for(var j = 0; j < neighbourhood_clone.length; j++) {\n      neighbourhood_clone[j] = JSON.stringify(neighbourhood_clone[j]);\n    }\n\n    var formData = new FormData();\n    Object.keys(values).forEach((key) => {\n      formData.append(key, values[key]);\n    })\n    formData.append(\"industrySize\", industry_clone.length);\n    formData.append(\"neighbourhoodSize\", neighbourhood_clone.length);\n\n    for(var k = 0; k < industry_clone.length; k++) {\n      formData.append(\"industry\"+k, industry_clone[k]);\n    }\n    for(var k = 0; k < neighbourhood_clone.length; k++) {\n      formData.append(\"neighbourhood\"+k, neighbourhood_clone[k]);\n    }\n    \n    axios.post('http://localhost:3003/url/saveProfile', formData, {\n      headers: {\n        \"content-Type\": 'multipart/form-data'\n      }\n    })\n\n    .then((response) => {\n      console.log(response);\n    }, (error) => {\n      console.log(error);\n    });\n  }\n\n  const[submitted, setSubmitted] = useState(false);\n  const[valid,setValid] = useState(false);\n\n  const handleBusinessNameInputChange = (event) => {\n    setValues({...values, businessName: event.target.value})\n  }\n  const handleOwnerNameInputChange = (event) => {\n    setValues({...values, businessOwnerName: event.target.value})\n  }\n  const handleDescriptionInputChange = (event) => {\n    setValues({...values, description: event.target.value})\n  }\n  const handleAddressInputChange = (event) => {\n    setValues({...values, address: event.target.value})\n  }\n  const handlePublicContactInputChange = (event) => {\n    setValues({...values, publicContact: event.target.value})\n  }\n  const handleBusinessContactInputChange = (event) => {\n    setValues({...values, businessContact: event.target.value})\n  }\n  const handleImageChange = (event) => {\n    setValues({...values,image: event.target.files[0]})\n  }\n  const handleTagsChange = (event) => {\n    setValues({...values,tags: event.target.value})\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if(values.businessOwnerName && values.businessName && values.businessContact){\n      send();\n      setValid(true);\n      window.location.href = '/';\n      \n    }\n    setSubmitted(true);\n    \n  }\n\n\n    //the tags array should be filled with all the tags that we have\n    const [industry,setindustryFlag] = useState([\n      {\n        name: \"food\",\n        flag: false\n      },\n      {\n        name: \"accomodation\",\n        flag: false\n      },\n      {\n        name: \"arts\",\n        flag: false\n      },\n      {\n        name: \"entertainment\",\n        flag: false\n      },\n      {\n        name: \"recreation\",\n        flag: false\n      },\n      {\n        name: \"construction\",\n        flag: false\n      },\n      {\n        name: \"education\",\n        flag: false\n      },\n      {\n        name: \"healthcare\",\n        flag: false\n      },\n      {\n        name: \"manufacturing\",\n        flag: false\n      },\n      {\n        name: \"real estate\",\n        flag: false\n      },\n      {\n        name: \"retail\",\n        flag: false\n      },\n      {\n        name: \"wholesale\",\n        flag: false\n      },\n      {\n        name: \"clothing\",\n        flag: false\n      }\n    ]);\n\n    const [neighbourhood,setneighbourhoodFlag] = useState([\n      {\n        name: \"downtown\",\n        flag: false\n      },\n      {\n        name: \"old montreal\",\n        flag: false\n      },\n      {\n        name: \"plateau and mile end\",\n        flag: false\n      },\n      {\n        name: \"the village\",\n        flag: false\n      },\n      {\n        name: \"mont royal and outrement\",\n        flag: false\n      },\n      {\n        name: \"hochelaga-maisonneuve\",\n        flag: false\n      },\n      {\n        name: \"little italy and villeray\",\n        flag: false\n      },\n      {\n        name: \"les quartiers du canal\",\n        flag: false\n      },\n      {\n        name: \"west island\",\n        flag: false\n      },\n      {\n        name: \"pole des rapides\",\n        flag: false\n      }\n    ]);\n    \n   // const [checkedIndustryState, setIndustryCheckedState] = useState(\n    //  new Array(industry.length).fill(false)\n   // );\n\n   // const [checkedNeighbourhoodState, setNeighbourhoodCheckedState] = useState(\n     // new Array(neighbourhood.length).fill(false)\n    //);\n\n    //const handleIndustryOnChange = (position) => {\n     // const updatedIndustryCheckedState = checkedIndustryState.map((item, index) =>\n       // index === position ? !item : item\n      //);\n\n      //setIndustryCheckedState(updatedIndustryCheckedState);\n     // industry[position].flag = !industry[position].flag\n    //}\n\n   // const handleNeighbourhoodOnChange = (position) => {\n     // const updatedNeighbourhoodCheckedState = checkedNeighbourhoodState.map((item, index) =>\n      //  index === position ? !item : item\n     // );\n\n      //setNeighbourhoodCheckedState(updatedNeighbourhoodCheckedState);\n      //neighbourhood[position].flag = !neighbourhood[position].flag\n    //}\n\n  return (\n    <>\n    <NavBar />  \n    <div class=\"form-container\">\n          <form className=\"register-form\" onSubmit={handleSubmit} encType=\"multipart/form-data\">\n            {submitted && valid ? <div className=\"success-message\">Success! Thank you for registering</div> : null}\n            <input\n              onChange={handleBusinessNameInputChange}\n              value={values.businessName}\n              className=\"form-field\"\n              type=\"text\"\n              placeholder=\"Business Name\"\n            />\n            {submitted && !values.businessName ? <span id=\"business-name-error\">Please enter a business name</span> : null}\n            <input\n              onChange={handleOwnerNameInputChange}\n              value={values.businessOwnerName}\n              className=\"form-field\"\n              type=\"text\"\n              placeholder=\"Owner Name\"\n            />\n            {submitted && !values.businessOwnerName ? <span id=\"owner-name-error\">Please enter a owner name</span> : null}\n            <input\n              onChange={handleBusinessContactInputChange}\n              value={values.businessContact}\n              className=\"form-field\"\n              type=\"text\"\n              placeholder=\"Private Contact\"\n            />\n            {submitted && !values.businessContact ? <span id=\"contact-error\">Please provide contact information.</span> : null}\n            <input\n              onChange={handleDescriptionInputChange}\n              value={values.description}\n              class=\"form-field\"\n              type=\"text\"\n              placeholder=\"Description\"\n            />\n            <input\n              onChange={handleAddressInputChange}\n              value={values.address}\n              class=\"form-field\"\n              type=\"text\"\n              placeholder=\"Address\"\n            />\n            <input\n              onChange={handlePublicContactInputChange}\n              value={values.publicContact}\n              class=\"form-field\"\n              type=\"text\"\n              placeholder=\"Public Contact\"\n            />\n            <label for=\"image-upload\">Upload a background image:</label>\n            <input\n              accept=\"image/*\"\n              onChange={handleImageChange}\n              class=\"form-field\"\n              id=\"image-upload\"\n              type=\"file\"\n              placeholder=\"Insert an image\"\n            />\n            <input\n              onChange={handleTagsChange}\n              value={values.tags}\n              class=\"form-field\"\n              type=\"text\"\n              placeholder=\"Enter some tags separated by commas\"\n            />\n            <h3>Select Industry</h3>\n                  <ul className=\"industry-list\">\n                    {industry.map(({ name },index) => {\n                      return (\n                        <li key={index}>\n                          <div className=\"indsutry-list-item\">\n                            <div className=\"left-section\">\n                              <input\n                                type=\"checkbox\"\n                                id={`custom-checkbox-${index}`}\n                                name={name}\n                                value={name}\n                                //checked={checkedIndustryState[index]}\n                                //onChange={() => handleIndustryOnChange(index)}\n                                onChange={(e) => {\n                                  let val = e.target.checked;\n                                  setindustryFlag(industry.map(cbox => {\n                                    if(cbox.name === e.target.name) { cbox.flag = val }\n                                    return cbox;\n                                  }))\n                                }}\n                              />\n                              <label htmlFor={`custom-checkbox-${index}`}>{name}</label>\n                            </div>\n                          </div>\n                        </li>\n                      );\n                    })}\n                  </ul>\n                  <h3>Select neighbourhood</h3>\n                  <ul className=\"industry-list\">\n                    {neighbourhood.map(({ name },index) => {\n                      return (\n                        <li key={index+industry.length}>\n                          <div className=\"industry-list-item\">\n                            <div className=\"left-section\">\n                              <input\n                                type=\"checkbox\"\n                                id={`custom-checkbox-${index + industry.length}`}\n                                name={name}\n                                value={name}\n                                //checked={checkedNeighbourhoodState[index]}\n                                //onChange={() => handleNeighbourhoodOnChange(index)}\n                                onChange={e => {\n                                  let val = e.target.checked;\n                                  setneighbourhoodFlag(neighbourhood.map(n => {\n                                    if(n.name === e.target.name) { n.flag = val }\n                                    return n;\n                                  }))\n                                }}\n                              />\n                              <label htmlFor={`custom-checkbox-${index+industry.length}`}>{name}</label>\n                            </div>\n                          </div>\n                        </li>\n                      );\n                    })}\n                  </ul>\n            <button class=\"form-field\" type=\"submit\">\n              Register\n            </button>\n          </form>\n    </div>\n    </>\n  )\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}